import { Instantiable, InstantiableConfig } from '../Instantiable.abstract';
export declare enum OceanPlatformTechStatus {
    Loading = "Loading",
    Unknown = "Unknown",
    Stopped = "Stopped",
    Working = "Working"
}
export interface OceanPlatformTech {
    name: string;
    version?: string;
    commit?: string;
    status: OceanPlatformTechStatus;
}
export interface OceanPlatformKeeperTech extends OceanPlatformTech {
    network?: string;
    keeperVersion?: string;
    contracts?: {
        [contractName: string]: string;
    };
}
export interface OceanPlatformVersions {
    squid: OceanPlatformKeeperTech;
    aquarius: OceanPlatformTech;
    brizo: OceanPlatformKeeperTech;
    status: {
        ok: boolean;
        contracts: boolean;
        network: boolean;
    };
}
export declare class OceanVersions extends Instantiable {
    static getInstance(config: InstantiableConfig): Promise<OceanVersions>;
    get(): Promise<OceanPlatformVersions>;
}
