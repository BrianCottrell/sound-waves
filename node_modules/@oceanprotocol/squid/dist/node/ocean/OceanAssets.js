"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var DDO_1 = require("../ddo/DDO");
var DID_1 = __importDefault(require("./DID"));
var utils_1 = require("../utils");
var Instantiable_abstract_1 = require("../Instantiable.abstract");
var CreateProgressStep;
(function (CreateProgressStep) {
    CreateProgressStep[CreateProgressStep["EncryptingFiles"] = 0] = "EncryptingFiles";
    CreateProgressStep[CreateProgressStep["FilesEncrypted"] = 1] = "FilesEncrypted";
    CreateProgressStep[CreateProgressStep["GeneratingProof"] = 2] = "GeneratingProof";
    CreateProgressStep[CreateProgressStep["ProofGenerated"] = 3] = "ProofGenerated";
    CreateProgressStep[CreateProgressStep["RegisteringDid"] = 4] = "RegisteringDid";
    CreateProgressStep[CreateProgressStep["DidRegistred"] = 5] = "DidRegistred";
    CreateProgressStep[CreateProgressStep["StoringDdo"] = 6] = "StoringDdo";
    CreateProgressStep[CreateProgressStep["DdoStored"] = 7] = "DdoStored";
})(CreateProgressStep = exports.CreateProgressStep || (exports.CreateProgressStep = {}));
var OrderProgressStep;
(function (OrderProgressStep) {
    OrderProgressStep[OrderProgressStep["CreatingAgreement"] = 0] = "CreatingAgreement";
    OrderProgressStep[OrderProgressStep["AgreementInitialized"] = 1] = "AgreementInitialized";
    OrderProgressStep[OrderProgressStep["LockingPayment"] = 2] = "LockingPayment";
    OrderProgressStep[OrderProgressStep["LockedPayment"] = 3] = "LockedPayment";
})(OrderProgressStep = exports.OrderProgressStep || (exports.OrderProgressStep = {}));
var OceanAssets = (function (_super) {
    __extends(OceanAssets, _super);
    function OceanAssets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OceanAssets.getInstance = function (config) {
        return __awaiter(this, void 0, void 0, function () {
            var instance;
            return __generator(this, function (_a) {
                instance = new OceanAssets();
                instance.setInstanceConfig(config);
                return [2, instance];
            });
        });
    };
    OceanAssets.prototype.resolve = function (did) {
        return __awaiter(this, void 0, void 0, function () {
            var serviceEndpoint;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.ocean.keeper.didRegistry.getAttributesByDid(did)];
                    case 1:
                        serviceEndpoint = (_a.sent()).serviceEndpoint;
                        return [2, this.ocean.aquarius.retrieveDDOByUrl(serviceEndpoint)];
                }
            });
        });
    };
    OceanAssets.prototype.create = function (metadata, publisher, services) {
        var _this = this;
        if (services === void 0) { services = []; }
        this.logger.log('Creating asset');
        return new utils_1.SubscribablePromise(function (observer) { return __awaiter(_this, void 0, void 0, function () {
            var secretStoreUri, _a, didRegistry, templates, did, encryptedFiles, serviceAgreementTemplate, serviceEndpoint, indexCount, ddo, rawConditions, conditions, storedDdo;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        secretStoreUri = this.config.secretStoreUri;
                        _a = this.ocean.keeper, didRegistry = _a.didRegistry, templates = _a.templates;
                        did = DID_1.default.generate();
                        this.logger.log('Encrypting files');
                        observer.next(CreateProgressStep.EncryptingFiles);
                        return [4, this.ocean.secretStore.encrypt(did.getId(), metadata.main.files, publisher)];
                    case 1:
                        encryptedFiles = _b.sent();
                        this.logger.log('Files encrypted');
                        observer.next(CreateProgressStep.FilesEncrypted);
                        return [4, templates.escrowAccessSecretStoreTemplate.getServiceAgreementTemplate()];
                    case 2:
                        serviceAgreementTemplate = _b.sent();
                        serviceEndpoint = this.ocean.aquarius.getServiceEndpoint(did);
                        indexCount = 0;
                        ddo = new DDO_1.DDO({
                            id: did.getDid(),
                            authentication: [
                                {
                                    type: 'RsaSignatureAuthentication2018',
                                    publicKey: did.getDid()
                                }
                            ],
                            publicKey: [
                                {
                                    id: did.getDid(),
                                    type: 'EthereumECDSAKey',
                                    owner: publisher.getId()
                                }
                            ],
                            service: __spreadArrays([
                                {
                                    type: 'access',
                                    serviceEndpoint: this.ocean.brizo.getConsumeEndpoint(),
                                    templateId: templates.escrowAccessSecretStoreTemplate.getAddress(),
                                    attributes: {
                                        main: {
                                            creator: publisher.getId(),
                                            datePublished: metadata.main.datePublished,
                                            name: 'dataAssetAccessServiceAgreement',
                                            price: metadata.main.price,
                                            timeout: 3600
                                        },
                                        serviceAgreementTemplate: serviceAgreementTemplate
                                    }
                                },
                                {
                                    type: 'authorization',
                                    service: 'SecretStore',
                                    serviceEndpoint: secretStoreUri,
                                    attributes: { main: {} }
                                },
                                {
                                    type: 'metadata',
                                    serviceEndpoint: serviceEndpoint,
                                    attributes: __assign(__assign({ curation: {
                                            rating: 0,
                                            numVotes: 0
                                        } }, metadata), { encryptedFiles: encryptedFiles, main: __assign(__assign({}, metadata.main), { files: metadata.main.files.map(function (file, index) { return (__assign(__assign({}, file), { index: index, url: undefined })); }) }) })
                                }
                            ], services).reverse()
                                .filter(function (_a, i, list) {
                                var type = _a.type;
                                return list.findIndex(function (_a) {
                                    var t = _a.type;
                                    return t === type;
                                }) === i;
                            })
                                .reverse()
                                .map(function (_) { return (__assign(__assign({}, _), { index: indexCount++ })); })
                        });
                        return [4, templates.escrowAccessSecretStoreTemplate.getServiceAgreementTemplateConditions()];
                    case 3:
                        rawConditions = _b.sent();
                        conditions = utils_1.fillConditionsWithDDO(rawConditions, ddo);
                        serviceAgreementTemplate.conditions = conditions;
                        this.logger.log('Generating proof');
                        observer.next(CreateProgressStep.GeneratingProof);
                        return [4, ddo.addProof(this.ocean, publisher.getId(), publisher.getPassword())];
                    case 4:
                        _b.sent();
                        this.logger.log('Proof generated');
                        observer.next(CreateProgressStep.ProofGenerated);
                        this.logger.log('Registering DID');
                        observer.next(CreateProgressStep.RegisteringDid);
                        return [4, didRegistry.registerAttribute(did.getId(), ddo.getChecksum(), [this.config.brizoAddress], serviceEndpoint, publisher.getId())];
                    case 5:
                        _b.sent();
                        this.logger.log('DID registred');
                        observer.next(CreateProgressStep.DidRegistred);
                        this.logger.log('Storing DDO');
                        observer.next(CreateProgressStep.StoringDdo);
                        return [4, this.ocean.aquarius.storeDDO(ddo)];
                    case 6:
                        storedDdo = _b.sent();
                        this.logger.log('DDO stored');
                        observer.next(CreateProgressStep.DdoStored);
                        return [2, storedDdo];
                }
            });
        }); });
    };
    OceanAssets.prototype.consume = function (agreementId, did, serviceIndex, consumerAccount, resultPath, index, useSecretStore) {
        if (index === void 0) { index = -1; }
        return __awaiter(this, void 0, void 0, function () {
            var ddo, attributes, accessService, files, serviceEndpoint, files_1, downloads;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.resolve(did)];
                    case 1:
                        ddo = _a.sent();
                        attributes = ddo.findServiceByType('metadata').attributes;
                        accessService = ddo.findServiceById(serviceIndex);
                        files = attributes.main.files;
                        serviceEndpoint = accessService.serviceEndpoint;
                        if (!serviceEndpoint) {
                            throw new Error('Consume asset failed, service definition is missing the `serviceEndpoint`.');
                        }
                        this.logger.log('Consuming files');
                        resultPath = resultPath
                            ? resultPath + "/datafile." + ddo.shortId() + "." + serviceIndex + "/"
                            : undefined;
                        if (!!useSecretStore) return [3, 3];
                        return [4, this.ocean.brizo.consumeService(agreementId, serviceEndpoint, consumerAccount, files, resultPath, index)];
                    case 2:
                        _a.sent();
                        return [3, 6];
                    case 3: return [4, this.ocean.secretStore.decrypt(did, ddo.findServiceByType('metadata').attributes.encryptedFiles, consumerAccount, ddo.findServiceByType('authorization').serviceEndpoint)];
                    case 4:
                        files_1 = _a.sent();
                        downloads = files_1
                            .filter(function (_a) {
                            var i = _a.index;
                            return index === -1 || index === i;
                        })
                            .map(function (_a) {
                            var url = _a.url, i = _a.index;
                            return _this.ocean.utils.fetch.downloadFile(url, resultPath, i);
                        });
                        return [4, Promise.all(downloads)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6:
                        this.logger.log('Files consumed');
                        if (resultPath) {
                            return [2, resultPath];
                        }
                        return [2, true];
                }
            });
        });
    };
    OceanAssets.prototype.order = function (did, index, consumer) {
        var _this = this;
        return new utils_1.SubscribablePromise(function (observer) { return __awaiter(_this, void 0, void 0, function () {
            var oceanAgreements, agreementId, ddo, keeper, templateName, template, accessCondition, paymentFlow, e_1;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        oceanAgreements = this.ocean.agreements;
                        agreementId = utils_1.zeroX(utils_1.generateId());
                        return [4, this.resolve(did)];
                    case 1:
                        ddo = _a.sent();
                        keeper = this.ocean.keeper;
                        templateName = ddo.findServiceByType('access').attributes
                            .serviceAgreementTemplate.contractName;
                        template = keeper.getTemplateByName(templateName);
                        accessCondition = keeper.conditions.accessSecretStoreCondition;
                        paymentFlow = new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                            var attributes, accessGranted, paid;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4, template.getAgreementCreatedEvent(agreementId).once()];
                                    case 1:
                                        _a.sent();
                                        this.logger.log('Agreement initialized');
                                        observer.next(OrderProgressStep.AgreementInitialized);
                                        attributes = ddo.findServiceByType('metadata').attributes;
                                        this.logger.log('Locking payment');
                                        accessGranted = accessCondition
                                            .getConditionFulfilledEvent(agreementId)
                                            .once();
                                        observer.next(OrderProgressStep.LockingPayment);
                                        return [4, oceanAgreements.conditions.lockReward(agreementId, attributes.main.price, consumer)];
                                    case 2:
                                        paid = _a.sent();
                                        observer.next(OrderProgressStep.LockedPayment);
                                        if (paid) {
                                            this.logger.log('Payment was OK');
                                        }
                                        else {
                                            this.logger.error('Payment was KO');
                                            this.logger.error('Agreement ID: ', agreementId);
                                            this.logger.error('DID: ', ddo.id);
                                            reject(new Error('Error on payment'));
                                        }
                                        return [4, accessGranted];
                                    case 3:
                                        _a.sent();
                                        this.logger.log('Access granted');
                                        resolve();
                                        return [2];
                                }
                            });
                        }); });
                        observer.next(OrderProgressStep.CreatingAgreement);
                        this.logger.log('Creating agreement');
                        return [4, oceanAgreements.create(did, agreementId, index, undefined, consumer, consumer)];
                    case 2:
                        _a.sent();
                        this.logger.log('Agreement created');
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 5, , 6]);
                        return [4, paymentFlow];
                    case 4:
                        _a.sent();
                        return [3, 6];
                    case 5:
                        e_1 = _a.sent();
                        throw new Error('Error paying the asset.');
                    case 6: return [2, agreementId];
                }
            });
        }); });
    };
    OceanAssets.prototype.owner = function (did) {
        return __awaiter(this, void 0, void 0, function () {
            var ddo, checksum, _a, creator, signatureValue, signer;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4, this.resolve(did)];
                    case 1:
                        ddo = _b.sent();
                        checksum = ddo.getChecksum();
                        _a = ddo.proof, creator = _a.creator, signatureValue = _a.signatureValue;
                        return [4, this.ocean.utils.signature.verifyText(checksum, signatureValue)];
                    case 2:
                        signer = _b.sent();
                        if (signer.toLowerCase() !== creator.toLowerCase()) {
                            this.logger.warn("Owner of " + ddo.id + " doesn't match. Expected " + creator + " instead of " + signer + ".");
                        }
                        return [2, creator];
                }
            });
        });
    };
    OceanAssets.prototype.ownerAssets = function (owner) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.ocean.keeper.didRegistry.getAttributesByOwner(owner)];
            });
        });
    };
    OceanAssets.prototype.transferOwnership = function (did, newOwner) {
        return __awaiter(this, void 0, void 0, function () {
            var owner;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.ocean.assets.owner(did)];
                    case 1:
                        owner = _a.sent();
                        return [2, this.ocean.keeper.didRegistry.transferDIDOwnership(did, newOwner, owner)];
                }
            });
        });
    };
    OceanAssets.prototype.consumerAssets = function (consumer) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.ocean.keeper.conditions.accessSecretStoreCondition.getGrantedDidByConsumer(consumer)];
                    case 1: return [2, (_a.sent()).map(function (_a) {
                            var did = _a.did;
                            return did;
                        })];
                }
            });
        });
    };
    OceanAssets.prototype.query = function (query) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.ocean.aquarius.queryMetadata(query)];
            });
        });
    };
    OceanAssets.prototype.search = function (text) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.ocean.aquarius.queryMetadataByText({
                        text: text,
                        page: 1,
                        offset: 100,
                        query: {
                            value: 1
                        },
                        sort: {
                            value: 1
                        }
                    })];
            });
        });
    };
    return OceanAssets;
}(Instantiable_abstract_1.Instantiable));
exports.OceanAssets = OceanAssets;
//# sourceMappingURL=OceanAssets.js.map