{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\src\\\\components\\\\organisms\\\\AssetsLatest.tsx\";\nimport React, { PureComponent } from 'react';\nimport { Logger } from '@oceanprotocol/squid';\nimport { User } from '../../context';\nimport Spinner from '../atoms/Spinner';\nimport AssetTeaser from '../molecules/AssetTeaser';\nimport styles from './AssetsLatest.module.scss';\n\nvar AssetsLatest =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AssetsLatest, _PureComponent);\n\n  function AssetsLatest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetsLatest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetsLatest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      latestAssets: [],\n      isLoadingLatest: true\n    };\n    _this._isMounted = false;\n    _this.getLatestAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var ocean, searchQuery, search;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ocean = _this.context.ocean;\n              searchQuery = {\n                offset: 15,\n                page: 1,\n                query: {\n                  categories: ['Research']\n                },\n                sort: {\n                  created: -1\n                }\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return ocean.assets.query(searchQuery);\n\n            case 5:\n              search = _context.sent;\n\n              _this.setState({\n                latestAssets: search.results,\n                isLoadingLatest: false\n              });\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              Logger.error(_context.t0.message);\n\n              _this.setState({\n                isLoadingLatest: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n    return _this;\n  }\n\n  _createClass(AssetsLatest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getLatestAssets();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          latestAssets = _this$state.latestAssets,\n          isLoadingLatest = _this$state.isLoadingLatest;\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        className: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Voice Apps\"), React.createElement(\"div\", {\n        className: styles.latestAssetsWrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, isLoadingLatest ? React.createElement(Spinner, {\n        message: \"Loading...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : latestAssets && latestAssets.length ? React.createElement(\"div\", {\n        className: styles.latestAssets,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, latestAssets.map(function (asset) {\n        return React.createElement(AssetTeaser, {\n          key: asset.id,\n          asset: asset,\n          minimal: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"No research papers found.\")));\n    }\n  }]);\n\n  return AssetsLatest;\n}(PureComponent);\n\nexport { AssetsLatest as default };\nAssetsLatest.contextType = User;","map":{"version":3,"sources":["C:/Users/Brian/Projects/ResearchHub/research-hub/client/src/components/organisms/AssetsLatest.tsx"],"names":["React","PureComponent","Logger","User","Spinner","AssetTeaser","styles","AssetsLatest","state","latestAssets","isLoadingLatest","_isMounted","getLatestAssets","ocean","context","searchQuery","offset","page","query","categories","sort","created","assets","search","setState","results","error","message","title","latestAssetsWrap","length","map","asset","id","contextType"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;IAOqBC,Y;;;;;;;;;;;;;;;;;UACVC,K,GAAQ;AAAEC,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,eAAe,EAAE;AAArC,K;UAERC,U,GAAa,K;UAWZC,e;;;;6BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,KADc,GACJ,MAAKC,OADD,CACdD,KADc;AAGhBE,cAAAA,WAHgB,GAGF;AAChBC,gBAAAA,MAAM,EAAE,EADQ;AAEhBC,gBAAAA,IAAI,EAAE,CAFU;AAGhBC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,UAAU,EAAE,CAAC,UAAD;AAAb,iBAHS;AAIhBC,gBAAAA,IAAI,EAAE;AACFC,kBAAAA,OAAO,EAAE,CAAC;AADR;AAJU,eAHE;AAAA;AAAA;AAAA,qBAaGR,KAAK,CAACS,MAAN,CAAaJ,KAAb,CAAmBH,WAAnB,CAbH;;AAAA;AAaZQ,cAAAA,MAbY;;AAclB,oBAAKC,QAAL,CAAc;AACVf,gBAAAA,YAAY,EAAEc,MAAM,CAACE,OADX;AAEVf,gBAAAA,eAAe,EAAE;AAFP,eAAd;;AAdkB;AAAA;;AAAA;AAAA;AAAA;AAmBlBR,cAAAA,MAAM,CAACwB,KAAP,CAAa,YAAMC,OAAnB;;AACA,oBAAKH,QAAL,CAAc;AAAEd,gBAAAA,eAAe,EAAE;AAAnB,eAAd;;AApBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCATC;AACvB,WAAKC,UAAL,GAAkB,IAAlB;AACA,WAAKA,UAAL,IAAmB,KAAKC,eAAL,EAAnB;AACH;;;2CAE6B;AAC1B,WAAKD,UAAL,GAAkB,KAAlB;AACH;;;6BA0Be;AAAA,wBAC8B,KAAKH,KADnC;AAAA,UACJC,YADI,eACJA,YADI;AAAA,UACUC,eADV,eACUA,eADV;AAGZ,aACI,0CACI;AAAI,QAAA,SAAS,EAAEJ,MAAM,CAACsB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAACuB,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKnB,eAAe,GACZ,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY,GAEZD,YAAY,IAAIA,YAAY,CAACqB,MAA7B,GACA;AAAK,QAAA,SAAS,EAAExB,MAAM,CAACG,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,YAAY,CAACsB,GAAb,CAAiB,UAACC,KAAD;AAAA,eACd,oBAAC,WAAD;AACI,UAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,UAAA,KAAK,EAAED,KAFX;AAGI,UAAA,OAAO,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADc;AAAA,OAAjB,CADL,CADA,GAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAdR,CAFJ,CADJ;AAsBH;;;;EA/DqC/B,a;;SAArBM,Y;AAkErBA,YAAY,CAAC2B,WAAb,GAA2B/B,IAA3B","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Logger } from '@oceanprotocol/squid'\r\nimport { User } from '../../context'\r\nimport Spinner from '../atoms/Spinner'\r\nimport AssetTeaser from '../molecules/AssetTeaser'\r\nimport styles from './AssetsLatest.module.scss'\r\n\r\ninterface AssetsLatestState {\r\n    latestAssets?: any[]\r\n    isLoadingLatest?: boolean\r\n}\r\n\r\nexport default class AssetsLatest extends PureComponent<{}, AssetsLatestState> {\r\n    public state = { latestAssets: [], isLoadingLatest: true }\r\n\r\n    public _isMounted = false\r\n\r\n    public componentDidMount() {\r\n        this._isMounted = true\r\n        this._isMounted && this.getLatestAssets()\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    private getLatestAssets = async () => {\r\n        const { ocean } = this.context\r\n\r\n        const searchQuery = {\r\n            offset: 15,\r\n            page: 1,\r\n            query: {categories: ['Research']},\r\n            sort: {\r\n                created: -1\r\n            }\r\n        }\r\n\r\n        try {\r\n            const search = await ocean.assets.query(searchQuery)\r\n            this.setState({\r\n                latestAssets: search.results,\r\n                isLoadingLatest: false\r\n            })\r\n        } catch (error) {\r\n            Logger.error(error.message)\r\n            this.setState({ isLoadingLatest: false })\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        const { latestAssets, isLoadingLatest } = this.state\r\n\r\n        return (\r\n            <>\r\n                <h2 className={styles.title}>Voice Apps</h2>\r\n                <div className={styles.latestAssetsWrap}>\r\n                    {isLoadingLatest ? (\r\n                        <Spinner message=\"Loading...\" />\r\n                    ) : latestAssets && latestAssets.length ? (\r\n                        <div className={styles.latestAssets}>\r\n                            {latestAssets.map((asset: any) => (\r\n                                <AssetTeaser\r\n                                    key={asset.id}\r\n                                    asset={asset}\r\n                                    minimal\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div>No research papers found.</div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAssetsLatest.contextType = User\r\n"]},"metadata":{},"sourceType":"module"}