{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\src\\\\routes\\\\Publish\\\\StepRegisterContent.tsx\";\nimport React, { PureComponent } from 'react';\nimport Web3message from '../../components/organisms/Web3message';\nimport Spinner from '../../components/atoms/Spinner';\nimport Button from '../../components/atoms/Button';\nimport styles from './StepRegisterContent.module.scss';\nexport var messages = {\n  0: '1/4<br />Encrypting files...',\n  1: '1/4<br />Successfully encrypted files.',\n  2: '2/4<br />Generating proof...',\n  3: '2/4<br />Successfully generated proof.',\n  4: '3/4<br /> Registering DID...',\n  5: '3/4<br /> Successfully registered DID.',\n  6: '4/4<br /> Storing DDO...',\n  7: '4/4<br /> Successfully stored DDO.'\n};\n\nvar StepRegisterContent =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(StepRegisterContent, _PureComponent);\n\n  function StepRegisterContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepRegisterContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepRegisterContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.publishingState = function () {\n      var publishingStep = _this.props.state.publishingStep;\n      var message = messages[publishingStep];\n      return React.createElement(Spinner, {\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    };\n\n    _this.errorState = function () {\n      return React.createElement(\"div\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Something went wrong,\", ' ', React.createElement(Button, {\n        link: true,\n        onClick: function onClick() {\n          return _this.props.tryAgain();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"try again\"));\n    };\n\n    _this.publishedState = function () {\n      return React.createElement(\"div\", {\n        className: styles.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Your data is published!\"), React.createElement(Button, {\n        link: true,\n        to: '/asset/' + _this.props.state.publishedDid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"See published app data\"), React.createElement(Button, {\n        link: true,\n        onClick: function onClick() {\n          return _this.props.toStart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Publish another data set\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(StepRegisterContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Web3message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), this.props.state.isPublishing ? this.publishingState() : this.props.state.publishingError ? this.errorState() : this.props.state.isPublished ? this.publishedState() : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.content));\n    }\n  }]);\n\n  return StepRegisterContent;\n}(PureComponent);\n\nexport { StepRegisterContent as default };","map":{"version":3,"sources":["C:/Users/Brian/Projects/ResearchHub/research-hub/client/src/routes/Publish/StepRegisterContent.tsx"],"names":["React","PureComponent","Web3message","Spinner","Button","styles","messages","StepRegisterContent","publishingState","publishingStep","props","state","message","errorState","tryAgain","publishedState","success","publishedDid","toStart","isPublishing","publishingError","isPublished","content"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,OAAO,IAAMC,QAAa,GAAG;AACzB,KAAG,8BADsB;AAEzB,KAAG,wCAFsB;AAGzB,KAAG,8BAHsB;AAIzB,KAAG,wCAJsB;AAKzB,KAAG,8BALsB;AAMzB,KAAG,wCANsB;AAOzB,KAAG,0BAPsB;AAQzB,KAAG;AARsB,CAAtB;;IAwBcC,mB;;;;;;;;;;;;;;;;;;UAIVC,e,GAAkB,YAAM;AAAA,UACnBC,cADmB,GACA,MAAKC,KAAL,CAAWC,KADX,CACnBF,cADmB;AAG3B,UAAMG,OAAO,GAAGN,QAAQ,CAACG,cAAD,CAAxB;AAEA,aAAO,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,K;;UAEMC,U,GAAa;AAAA,aAChB;AAAK,QAAA,SAAS,EAAER,MAAM,CAACO,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC0B,GAD1B,EAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKF,KAAL,CAAWI,QAAX,EAAN;AAAA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADgB;AAAA,K;;UASbC,c,GAAiB,YAAM;AAC1B,aAAQ;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACW,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADI,EAEJ,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,EAAE,EAAE,YAAY,MAAKN,KAAL,CAAWC,KAAX,CAAiBM,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFI,EAKJ,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKP,KAAL,CAAWQ,OAAX,EAAN;AAAA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALI,CAAR;AASH,K;;;;;;;6BAEe;AACZ,aACI,0CACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,YAAjB,GACG,KAAKX,eAAL,EADH,GAEG,KAAKE,KAAL,CAAWC,KAAX,CAAiBS,eAAjB,GACA,KAAKP,UAAL,EADA,GAEA,KAAKH,KAAL,CAAWC,KAAX,CAAiBU,WAAjB,GACA,KAAKN,cAAL,EADA,GAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKL,KAAL,CAAWY,OAAf,CATR,CADJ;AAcH;;;;EAhD4CrB,a;;SAA5BM,mB","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport Web3message from '../../components/organisms/Web3message'\r\nimport Spinner from '../../components/atoms/Spinner'\r\nimport Button from '../../components/atoms/Button'\r\nimport styles from './StepRegisterContent.module.scss'\r\n\r\nexport const messages: any = {\r\n    0: '1/4<br />Encrypting files...',\r\n    1: '1/4<br />Successfully encrypted files.',\r\n    2: '2/4<br />Generating proof...',\r\n    3: '2/4<br />Successfully generated proof.',\r\n    4: '3/4<br /> Registering DID...',\r\n    5: '3/4<br /> Successfully registered DID.',\r\n    6: '4/4<br /> Storing DDO...',\r\n    7: '4/4<br /> Successfully stored DDO.'\r\n}\r\n\r\ninterface StepRegisterContentProps {\r\n    tryAgain(): void\r\n    toStart(): void\r\n    state: {\r\n        publishedDid: string\r\n        isPublishing: boolean\r\n        publishingError: string\r\n        isPublished: boolean\r\n        publishingStep: number\r\n    }\r\n    content?: string\r\n}\r\n\r\nexport default class StepRegisterContent extends PureComponent<\r\n    StepRegisterContentProps,\r\n    {}\r\n> {\r\n    public publishingState = () => {\r\n        const { publishingStep } = this.props.state\r\n\r\n        const message = messages[publishingStep]\r\n\r\n        return <Spinner message={message} />\r\n    }\r\n\r\n    public errorState = () => (\r\n        <div className={styles.message}>\r\n            Something went wrong,{' '}\r\n            <Button link onClick={() => this.props.tryAgain()}>\r\n                try again\r\n            </Button>\r\n        </div>\r\n    )\r\n\r\n    public publishedState = () => {\r\n        return (<div className={styles.success}>\r\n            <p>Your data is published!</p>\r\n            <Button link to={'/asset/' + this.props.state.publishedDid}>\r\n                See published app data\r\n            </Button>\r\n            <Button link onClick={() => this.props.toStart()}>\r\n                Publish another data set\r\n            </Button>\r\n        </div>)\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <>\r\n                <Web3message />\r\n                {this.props.state.isPublishing ? (\r\n                    this.publishingState()\r\n                ) : this.props.state.publishingError ? (\r\n                    this.errorState()\r\n                ) : this.props.state.isPublished ? (\r\n                    this.publishedState()\r\n                ) : (\r\n                    <p>{this.props.content}</p>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}