{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\src\\\\components\\\\molecules\\\\AccountStatus\\\\Indicator.tsx\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { User, Market } from '../../../context';\nimport styles from './Indicator.module.scss';\n\nvar Indicator = function Indicator(_ref) {\n  var className = _ref.className,\n      togglePopover = _ref.togglePopover,\n      forwardedRef = _ref.forwardedRef;\n  return React.createElement(\"div\", {\n    className: cx(styles.status, className),\n    onMouseOver: togglePopover,\n    onMouseOut: togglePopover,\n    ref: forwardedRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(User.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (user) {\n    return React.createElement(Market.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, function (market) {\n      return !user.isLogged || !market.networkMatch ? React.createElement(\"div\", {\n        className: \"status-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.statusIndicatorCloseEnough,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Offline\")) : user.isLogged ? React.createElement(\"div\", {\n        className: \"status-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.statusIndicatorActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Online\")) : null;\n    });\n  }));\n};\n\nexport default Indicator;","map":{"version":3,"sources":["C:/Users/Brian/Projects/ResearchHub/research-hub/client/src/components/molecules/AccountStatus/Indicator.tsx"],"names":["React","cx","User","Market","styles","Indicator","className","togglePopover","forwardedRef","status","user","market","isLogged","networkMatch","statusIndicatorCloseEnough","statusIndicatorActive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MACjBC,SADiB,QACjBA,SADiB;AAAA,MAEjBC,aAFiB,QAEjBA,aAFiB;AAAA,MAGjBC,YAHiB,QAGjBA,YAHiB;AAAA,SASjB;AACC,IAAA,SAAS,EAAEP,EAAE,CAACG,MAAM,CAACK,MAAR,EAAgBH,SAAhB,CADd;AAEC,IAAA,WAAW,EAAEC,aAFd;AAGC,IAAA,UAAU,EAAEA,aAHb;AAIC,IAAA,GAAG,EAAEC,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,UAACE,IAAD;AAAA,WACA,oBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,UAACC,MAAD;AAAA,aACA,CAACD,IAAI,CAACE,QAAN,IAAkB,CAACD,MAAM,CAACE,YAA1B,GACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,SAAS,EAAET,MAAM,CAACU,0BAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFD,CADD,GAKIJ,IAAI,CAACE,QAAL,GACH;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,SAAS,EAAER,MAAM,CAACW,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,CADG,GAKA,IAXJ;AAAA,KADF,CADA;AAAA,GADF,CAND,CATiB;AAAA,CAAlB;;AAoCA,eAAeV,SAAf","sourcesContent":["import React from 'react';\r\nimport cx from 'classnames';\r\nimport { User, Market } from '../../../context';\r\nimport styles from './Indicator.module.scss';\r\n\r\nconst Indicator = ({\r\n\tclassName,\r\n\ttogglePopover,\r\n\tforwardedRef\r\n}: {\r\n\tclassName?: string;\r\n\ttogglePopover: () => void;\r\n\tforwardedRef: (ref: HTMLElement | null) => void;\r\n}) => (\r\n\t<div\r\n\t\tclassName={cx(styles.status, className)}\r\n\t\tonMouseOver={togglePopover}\r\n\t\tonMouseOut={togglePopover}\r\n\t\tref={forwardedRef}\r\n\t>\r\n\t\t<User.Consumer>\r\n\t\t\t{(user) => (\r\n\t\t\t\t<Market.Consumer>\r\n\t\t\t\t\t{(market) =>\r\n\t\t\t\t\t\t!user.isLogged || !market.networkMatch ? (\r\n\t\t\t\t\t\t\t<div className=\"status-inline\">\r\n\t\t\t\t\t\t\t\t<span className={styles.statusIndicatorCloseEnough} />\r\n\t\t\t\t\t\t\t\t<span>Offline</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : user.isLogged ? (\r\n\t\t\t\t\t\t\t<div className=\"status-inline\">\r\n\t\t\t\t\t\t\t\t<span className={styles.statusIndicatorActive} />\r\n\t\t\t\t\t\t\t\t<span>Online</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t</Market.Consumer>\r\n\t\t\t)}\r\n\t\t</User.Consumer>\r\n\t</div>\r\n);\r\n\r\nexport default Indicator;\r\n"]},"metadata":{},"sourceType":"module"}