{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\src\\\\routes\\\\Publish\\\\Step.tsx\";\nimport React, { PureComponent } from 'react';\nimport Input from '../../components/atoms/Form/Input';\nimport Label from '../../components/atoms/Form/Label';\nimport Row from '../../components/atoms/Form/Row';\nimport Button from '../../components/atoms/Button';\nimport { User, Market } from '../../context';\nimport Files from './Files/';\nimport StepRegisterContent from './StepRegisterContent';\nimport styles from './Step.module.scss';\nimport Web3message from '../../components/organisms/Web3message';\n\nvar Step =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Step, _PureComponent);\n\n  function Step() {\n    _classCallCheck(this, Step);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Step).apply(this, arguments));\n  }\n\n  _createClass(Step, [{\n    key: \"previousButton\",\n    value: function previousButton() {\n      var _this$props = this.props,\n          currentStep = _this$props.currentStep,\n          prev = _this$props.prev;\n\n      if (currentStep !== 1) {\n        return React.createElement(Button, {\n          link: true,\n          onClick: prev,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"\\u2190 Previous\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"nextButton\",\n    value: function nextButton() {\n      var _this$props2 = this.props,\n          currentStep = _this$props2.currentStep,\n          next = _this$props2.next,\n          totalSteps = _this$props2.totalSteps,\n          state = _this$props2.state;\n\n      if (currentStep < totalSteps) {\n        return React.createElement(Button, {\n          disabled: !state.validationStatus[currentStep].allFieldsValid,\n          onClick: next,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Next \\u2192\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props3 = this.props,\n          currentStep = _this$props3.currentStep,\n          index = _this$props3.index,\n          title = _this$props3.title,\n          description = _this$props3.description,\n          fields = _this$props3.fields,\n          inputChange = _this$props3.inputChange,\n          state = _this$props3.state,\n          totalSteps = _this$props3.totalSteps,\n          tryAgain = _this$props3.tryAgain,\n          toStart = _this$props3.toStart,\n          content = _this$props3.content;\n\n      if (currentStep !== index + 1) {\n        return null;\n      }\n\n      var lastStep = currentStep === totalSteps;\n      return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n        className: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        className: styles.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, description)), fields && Object.entries(fields).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        if (key === 'files') {\n          return React.createElement(Row, {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: key,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, value.label), React.createElement(Files, {\n            placeholder: value.placeholder,\n            name: key,\n            help: value.help,\n            files: state.files,\n            onChange: inputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }));\n        }\n\n        return React.createElement(Input, {\n          key: key,\n          name: key,\n          label: value.label,\n          placeholder: value.placeholder,\n          required: value.required,\n          type: value.type,\n          help: value.help,\n          options: value.options,\n          onChange: inputChange,\n          rows: value.rows,\n          value: state[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n      }), lastStep && React.createElement(StepRegisterContent, {\n        tryAgain: tryAgain,\n        toStart: toStart,\n        state: state,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.previousButton(), this.nextButton(), lastStep && React.createElement(Market.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, function (market) {\n        return React.createElement(Button, {\n          disabled: !_this.context.isLogged || !market.networkMatch || _this.props.state.isPublishing,\n          primary: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Upload data\");\n      })), React.createElement(\"div\", {\n        className: styles.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, !lastStep && React.createElement(Web3message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Step;\n}(PureComponent);\n\nStep.contextType = User;\nexport { Step as default };","map":{"version":3,"sources":["C:/Users/Brian/Projects/SoundWaves/sound-waves/client/src/routes/Publish/Step.tsx"],"names":["React","PureComponent","Input","Label","Row","Button","User","Market","Files","StepRegisterContent","styles","Web3message","Step","props","currentStep","prev","next","totalSteps","state","validationStatus","allFieldsValid","index","title","description","fields","inputChange","tryAgain","toStart","content","lastStep","header","Object","entries","map","key","value","label","placeholder","help","files","required","type","options","rows","actions","previousButton","nextButton","market","context","isLogged","networkMatch","isPublishing","account","contextType"],"mappings":"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","sourcesContent":["import React, { PureComponent, FormEvent, ChangeEvent } from 'react'\r\nimport Input from '../../components/atoms/Form/Input'\r\nimport Label from '../../components/atoms/Form/Label'\r\nimport Row from '../../components/atoms/Form/Row'\r\nimport Button from '../../components/atoms/Button'\r\nimport { User, Market } from '../../context'\r\nimport Files from './Files/'\r\nimport StepRegisterContent from './StepRegisterContent'\r\nimport styles from './Step.module.scss'\r\nimport Web3message from '../../components/organisms/Web3message'\r\n\r\ninterface Fields {\r\n    label: string\r\n    placeholder?: string\r\n    help?: string\r\n    type: string\r\n    required?: boolean\r\n    options?: string\r\n    rows?: number\r\n}\r\n\r\ninterface StepProps {\r\n    currentStep: number\r\n    index: number\r\n    inputChange(\r\n        event:\r\n            | FormEvent<HTMLInputElement>\r\n            | ChangeEvent<HTMLInputElement>\r\n            | ChangeEvent<HTMLSelectElement>\r\n            | ChangeEvent<HTMLTextAreaElement>\r\n    ): void\r\n    fields?: Fields\r\n    state: any\r\n    title: string\r\n    description: string\r\n    next(): void\r\n    prev(): void\r\n    totalSteps: number\r\n    tryAgain(): void\r\n    toStart(): void\r\n    publishedDid?: string\r\n    content?: string\r\n}\r\n\r\nexport default class Step extends PureComponent<StepProps, {}> {\r\n    public static contextType = User\r\n\r\n    public previousButton() {\r\n        const { currentStep, prev } = this.props\r\n\r\n        if (currentStep !== 1) {\r\n            return (\r\n                <Button link onClick={prev}>\r\n                    ← Previous\r\n                </Button>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n    public nextButton() {\r\n        const { currentStep, next, totalSteps, state } = this.props\r\n\r\n        if (currentStep < totalSteps) {\r\n            return (\r\n                <Button\r\n                    disabled={\r\n                        !state.validationStatus[currentStep].allFieldsValid\r\n                    }\r\n                    onClick={next}\r\n                >\r\n                    Next →\r\n                </Button>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n    public render() {\r\n        const {\r\n            currentStep,\r\n            index,\r\n            title,\r\n            description,\r\n            fields,\r\n            inputChange,\r\n            state,\r\n            totalSteps,\r\n            tryAgain,\r\n            toStart,\r\n            content\r\n        } = this.props\r\n\r\n        if (currentStep !== index + 1) {\r\n            return null\r\n        }\r\n\r\n        const lastStep = currentStep === totalSteps\r\n\r\n        return (\r\n            <>\r\n                <header className={styles.header}>\r\n                    <h2 className={styles.title}>{title}</h2>\r\n                    <p className={styles.description}>{description}</p>\r\n                </header>\r\n\r\n                {fields &&\r\n                    Object.entries(fields).map(([key, value]) => {\r\n                        if (key === 'files') {\r\n                            return (\r\n                                <Row key={key}>\r\n                                    <Label htmlFor={key} required>\r\n                                        {value.label}\r\n                                    </Label>\r\n                                    <Files\r\n                                        placeholder={value.placeholder}\r\n                                        name={key}\r\n                                        help={value.help}\r\n                                        files={state.files}\r\n                                        onChange={inputChange}\r\n                                    />\r\n                                </Row>\r\n                            )\r\n                        }\r\n\r\n                        return (\r\n                            <Input\r\n                                key={key}\r\n                                name={key}\r\n                                label={value.label}\r\n                                placeholder={value.placeholder}\r\n                                required={value.required}\r\n                                type={value.type}\r\n                                help={value.help}\r\n                                options={value.options}\r\n                                onChange={inputChange}\r\n                                rows={value.rows}\r\n                                value={(state as any)[key]}\r\n                            />\r\n                        )\r\n                    })}\r\n\r\n                {lastStep && (\r\n                    <StepRegisterContent\r\n                        tryAgain={tryAgain}\r\n                        toStart={toStart}\r\n                        state={state}\r\n                        content={content}\r\n                    />\r\n                )}\r\n\r\n                <div className={styles.actions}>\r\n                    {this.previousButton()}\r\n                    {this.nextButton()}\r\n\r\n                    {lastStep && (\r\n                        <Market.Consumer>\r\n                            {market => (\r\n                                <Button\r\n                                    disabled={\r\n                                        !this.context.isLogged ||\r\n                                        !market.networkMatch ||\r\n                                        this.props.state.isPublishing\r\n                                    }\r\n                                    primary\r\n                                >\r\n                                    Upload data\r\n                                </Button>\r\n                            )}\r\n                        </Market.Consumer>\r\n                    )}\r\n                </div>\r\n                <div className={styles.account}>\r\n                    {!lastStep && <Web3message />}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}