{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\src\\\\context\\\\MarketProvider.tsx\";\nimport React, { PureComponent } from 'react';\nimport { Logger } from '@oceanprotocol/squid';\nimport { Market, User } from '.';\n\nvar MarketProvider =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MarketProvider, _PureComponent);\n\n  function MarketProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MarketProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MarketProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      totalAssets: 0,\n      categories: ['Alexa'],\n      network: 'Pacific',\n      networkMatch: false\n    };\n    _this.getTotalAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var searchQuery, ocean, search;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchQuery = {\n                offset: 1,\n                page: 1,\n                query: {},\n                sort: {\n                  value: 1\n                }\n              };\n              _context.prev = 1;\n              ocean = _this.props.ocean;\n              _context.next = 5;\n              return ocean.assets.query(searchQuery);\n\n            case 5:\n              search = _context.sent;\n\n              _this.setState({\n                totalAssets: search.totalResults\n              });\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              Logger.error('Error', _context.t0.message);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n    _this.getMarketNetwork =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var ocean, brizo, network;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              ocean = _this.props.ocean; // Set desired network to whatever Brizo is running in\n\n              _context2.next = 4;\n              return ocean.brizo.getVersionInfo();\n\n            case 4:\n              brizo = _context2.sent;\n              network = brizo.network.charAt(0).toUpperCase() + brizo.network.slice(1);\n\n              _this.setState({\n                network: network\n              });\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              Logger.error('Error', _context2.t0.message);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n    return _this;\n  }\n\n  _createClass(MarketProvider, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.checkCorrectUserNetwork();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(prevProps) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(prevProps.ocean !== this.props.ocean)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.getTotalAssets();\n\n              case 3:\n                _context4.next = 5;\n                return this.getMarketNetwork();\n\n              case 5:\n                _context4.next = 7;\n                return this.checkCorrectUserNetwork();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidUpdate(_x) {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"checkCorrectUserNetwork\",\n    value: function () {\n      var _checkCorrectUserNetwork = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.context.network === this.state.network) {\n                  this.setState({\n                    networkMatch: true\n                  });\n                } else {\n                  this.setState({\n                    networkMatch: false\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function checkCorrectUserNetwork() {\n        return _checkCorrectUserNetwork.apply(this, arguments);\n      }\n\n      return checkCorrectUserNetwork;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Market.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return MarketProvider;\n}(PureComponent);\n\nMarketProvider.contextType = User;\nexport { MarketProvider as default };","map":{"version":3,"sources":["C:/Users/Brian/Projects/SoundWaves/sound-waves/client/src/context/MarketProvider.tsx"],"names":["React","PureComponent","Logger","Market","User","MarketProvider","state","totalAssets","categories","network","networkMatch","getTotalAssets","searchQuery","offset","page","query","sort","value","ocean","props","assets","search","setState","totalResults","error","message","getMarketNetwork","brizo","getVersionInfo","charAt","toUpperCase","slice","checkCorrectUserNetwork","prevProps","context","children","contextType"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,MAAT,QAA8B,sBAA9B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,GAA7B;;IAaqBC,c;;;;;;;;;;;;;;;;;UAGbC,K,GAAQ;AACdC,MAAAA,WAAW,EAAE,CADC;AAEdC,MAAAA,UAAU,EAAE,CAAE,OAAF,CAFE;AAGdC,MAAAA,OAAO,EAAE,SAHK;AAIdC,MAAAA,YAAY,EAAE;AAJA,K;UAqBPC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,cAAAA,WADkB,GACJ;AACnBC,gBAAAA,MAAM,EAAE,CADW;AAEnBC,gBAAAA,IAAI,EAAE,CAFa;AAGnBC,gBAAAA,KAAK,EAAE,EAHY;AAInBC,gBAAAA,IAAI,EAAE;AACLC,kBAAAA,KAAK,EAAE;AADF;AAJa,eADI;AAAA;AAWfC,cAAAA,KAXe,GAWL,MAAKC,KAXA,CAWfD,KAXe;AAAA;AAAA,qBAYFA,KAAK,CAACE,MAAN,CAAaL,KAAb,CAAmBH,WAAnB,CAZE;;AAAA;AAYjBS,cAAAA,MAZiB;;AAavB,oBAAKC,QAAL,CAAc;AAAEf,gBAAAA,WAAW,EAAEc,MAAM,CAACE;AAAtB,eAAd;;AAbuB;AAAA;;AAAA;AAAA;AAAA;AAevBrB,cAAAA,MAAM,CAACsB,KAAP,CAAa,OAAb,EAAsB,YAAMC,OAA5B;;AAfuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;UAmBjBC,gB;;;;6BAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBR,cAAAA,KAFiB,GAEP,MAAKC,KAFE,CAEjBD,KAFiB,EAGzB;;AAHyB;AAAA,qBAILA,KAAK,CAACS,KAAN,CAAYC,cAAZ,EAJK;;AAAA;AAInBD,cAAAA,KAJmB;AAKnBlB,cAAAA,OALmB,GAKTkB,KAAK,CAAClB,OAAN,CAAcoB,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCH,KAAK,CAAClB,OAAN,CAAcsB,KAAd,CAAoB,CAApB,CAL/B;;AAMzB,oBAAKT,QAAL,CAAc;AAAEb,gBAAAA,OAAO,EAAPA;AAAF,eAAd;;AANyB;AAAA;;AAAA;AAAA;AAAA;AAQzBP,cAAAA,MAAM,CAACsB,KAAP,CAAa,OAAb,EAAsB,aAAMC,OAA5B;;AARyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;;;;;uBAhCpB,KAAKO,uBAAL,E;;;;;;;;;;;;;;;;;;;;;iDAGyBC,S;;;;;sBAG3BA,SAAS,CAACf,KAAV,KAAoB,KAAKC,KAAL,CAAWD,K;;;;;;uBAC5B,KAAKP,cAAL,E;;;;uBACA,KAAKe,gBAAL,E;;;;uBACA,KAAKM,uBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCP,oBAAI,KAAKE,OAAL,CAAazB,OAAb,KAAyB,KAAKH,KAAL,CAAWG,OAAxC,EAAiD;AAChD,uBAAKa,QAAL,CAAc;AAAEZ,oBAAAA,YAAY,EAAE;AAAhB,mBAAd;AACA,iBAFD,MAEO;AACN,uBAAKY,QAAL,CAAc;AAAEZ,oBAAAA,YAAY,EAAE;AAAhB,mBAAd;AACA;;;;;;;;;;;;;;;;;;6BAGc;AACf,aAAO,oBAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,KAAK,EAAE,KAAKJ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKa,KAAL,CAAWgB,QAAhD,CAAP;AACA;;;;EAjE0ClC,a;;AAAvBI,c,CACN+B,W,GAAchC,I;SADRC,c","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Logger, Ocean } from '@oceanprotocol/squid';\r\nimport { Market, User } from '.';\r\nimport formPublish from '../data/form-publish.json';\r\ninterface MarketProviderProps {\r\n\tocean: Ocean;\r\n}\r\n\r\ninterface MarketProviderState {\r\n\ttotalAssets: number;\r\n\tcategories: string[];\r\n\tnetwork: string;\r\n\tnetworkMatch: boolean;\r\n}\r\n\r\nexport default class MarketProvider extends PureComponent<MarketProviderProps, MarketProviderState> {\r\n\tpublic static contextType = User;\r\n\r\n\tpublic state = {\r\n\t\ttotalAssets: 0,\r\n\t\tcategories: [ 'Alexa' ],\r\n\t\tnetwork: 'Pacific',\r\n\t\tnetworkMatch: false\r\n\t};\r\n\r\n\tpublic async componentDidMount() {\r\n\t\tawait this.checkCorrectUserNetwork();\r\n\t}\r\n\r\n\tpublic async componentDidUpdate(prevProps: any) {\r\n\t\t// Using ocean prop instead of getting it from context to be able to compare.\r\n\t\t// Cause there is no `prevContext`.\r\n\t\tif (prevProps.ocean !== this.props.ocean) {\r\n\t\t\tawait this.getTotalAssets();\r\n\t\t\tawait this.getMarketNetwork();\r\n\t\t\tawait this.checkCorrectUserNetwork();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getTotalAssets = async () => {\r\n\t\tconst searchQuery = {\r\n\t\t\toffset: 1,\r\n\t\t\tpage: 1,\r\n\t\t\tquery: {},\r\n\t\t\tsort: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst { ocean } = this.props;\r\n\t\t\tconst search = await ocean.assets.query(searchQuery);\r\n\t\t\tthis.setState({ totalAssets: search.totalResults });\r\n\t\t} catch (error) {\r\n\t\t\tLogger.error('Error', error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate getMarketNetwork = async () => {\r\n\t\ttry {\r\n\t\t\tconst { ocean } = this.props;\r\n\t\t\t// Set desired network to whatever Brizo is running in\r\n\t\t\tconst brizo = await ocean.brizo.getVersionInfo();\r\n\t\t\tconst network = brizo.network.charAt(0).toUpperCase() + brizo.network.slice(1);\r\n\t\t\tthis.setState({ network });\r\n\t\t} catch (error) {\r\n\t\t\tLogger.error('Error', error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate async checkCorrectUserNetwork() {\r\n\t\tif (this.context.network === this.state.network) {\r\n\t\t\tthis.setState({ networkMatch: true });\r\n\t\t} else {\r\n\t\t\tthis.setState({ networkMatch: false });\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn <Market.Provider value={this.state}>{this.props.children}</Market.Provider>;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}