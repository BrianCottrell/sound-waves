{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\src\\\\routes\\\\Publish\\\\Files\\\\index.tsx\";\nimport React, { lazy, Suspense, PureComponent } from 'react';\nimport axios from 'axios';\nimport { Logger } from '@oceanprotocol/squid';\nimport shortid from 'shortid';\nimport Button from '../../../components/atoms/Button';\nimport Help from '../../../components/atoms/Form/Help';\nimport ItemForm from './ItemForm';\nimport Item from './Item';\nimport styles from './index.module.scss';\nimport { serviceUri } from '../../../config';\nimport cleanupContentType from '../../../utils/cleanupContentType';\nimport Spinner from '../../../components/atoms/Spinner';\nvar Ipfs = lazy(function () {\n  return import('./Ipfs');\n});\nvar buttons = [{\n  id: 'url',\n  title: '+ From URL',\n  titleActive: '- Cancel'\n}, {\n  id: 'ipfs',\n  title: '+ Add to IPFS',\n  titleActive: '- Cancel'\n}];\n\nvar Files =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Files, _PureComponent);\n\n  function Files() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Files);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Files)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isFormShown: false,\n      isIpfsFormShown: false\n    };\n    _this.signal = axios.CancelToken.source();\n\n    _this.toggleForm = function (e, form) {\n      e.preventDefault();\n\n      _this.setState({\n        isFormShown: form === 'url' ? !_this.state.isFormShown : false,\n        isIpfsFormShown: form === 'ipfs' ? !_this.state.isIpfsFormShown : false\n      });\n    };\n\n    _this.addFile =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var duplicateFiles, file, event;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // check for duplicate urls\n                duplicateFiles = _this.props.files.filter(function (props) {\n                  return url.includes(props.url);\n                });\n\n                if (!(duplicateFiles.length > 0)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.setState({\n                  isFormShown: false,\n                  isIpfsFormShown: false\n                }));\n\n              case 3:\n                _context.next = 5;\n                return _this.getFile(url);\n\n              case 5:\n                file = _context.sent;\n                file && _this.props.files.push(file);\n                event = {\n                  currentTarget: {\n                    name: 'files',\n                    value: _this.props.files\n                  }\n                };\n\n                _this.props.onChange(event);\n\n                _this.setState({\n                  isFormShown: false,\n                  isIpfsFormShown: false\n                });\n\n                _this.forceUpdate();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.removeFile = function (index) {\n      _this.props.files.splice(index, 1);\n\n      var event = {\n        currentTarget: {\n          name: 'files',\n          value: _this.props.files\n        }\n      };\n\n      _this.props.onChange(event);\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(Files, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.signal.cancel();\n    }\n  }, {\n    key: \"getFile\",\n    value: function () {\n      var _getFile = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(url) {\n        var file, response, _response$data$result, contentLength, contentType, found;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                file = {\n                  url: url,\n                  contentType: '',\n                  found: false // non-standard\n\n                };\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios({\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  url: \"\".concat(serviceUri, \"/api/v1/urlcheck\"),\n                  data: {\n                    url: url\n                  },\n                  cancelToken: this.signal.token\n                });\n\n              case 4:\n                response = _context2.sent;\n                _response$data$result = response.data.result, contentLength = _response$data$result.contentLength, contentType = _response$data$result.contentType, found = _response$data$result.found;\n                if (contentLength) file.contentLength = contentLength;\n\n                if (contentType) {\n                  file.contentType = contentType;\n                  file.compression = cleanupContentType(contentType);\n                }\n\n                file.found = found;\n                return _context2.abrupt(\"return\", file);\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                !axios.isCancel(_context2.t0) && Logger.error(_context2.t0.message);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 12]]);\n      }));\n\n      function getFile(_x2) {\n        return _getFile.apply(this, arguments);\n      }\n\n      return getFile;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          files = _this$props.files,\n          help = _this$props.help,\n          placeholder = _this$props.placeholder,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n      var _this$state = this.state,\n          isFormShown = _this$state.isFormShown,\n          isIpfsFormShown = _this$state.isIpfsFormShown;\n      return React.createElement(React.Fragment, null, help && React.createElement(Help, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, help), React.createElement(\"input\", {\n        type: \"hidden\",\n        name: name,\n        value: JSON.stringify(files),\n        onChange: onChange,\n        \"data-testid\": \"files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.newItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, files.length > 0 && React.createElement(\"ul\", {\n        className: styles.itemsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, files.map(function (item, index) {\n        return React.createElement(Item, {\n          key: shortid.generate(),\n          item: item,\n          removeFile: function removeFile() {\n            return _this2.removeFile(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        });\n      })), buttons.map(function (button) {\n        var isActive = button.id === 'url' && isFormShown || button.id === 'ipfs' && isIpfsFormShown;\n        return React.createElement(Button, {\n          key: shortid.generate(),\n          link: true,\n          onClick: function onClick(e) {\n            return _this2.toggleForm(e, button.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, isActive ? button.titleActive : button.title);\n      }), isFormShown && React.createElement(ItemForm, {\n        placeholder: placeholder,\n        addFile: this.addFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), isIpfsFormShown && React.createElement(Suspense, {\n        fallback: React.createElement(Spinner, {\n          message: \"Loading...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Ipfs, {\n        addFile: this.addFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Files;\n}(PureComponent);\n\nexport { Files as default };","map":{"version":3,"sources":["C:/Users/Brian/Projects/SoundWaves/sound-waves/client/src/routes/Publish/Files/index.tsx"],"names":["React","lazy","Suspense","PureComponent","axios","Logger","shortid","Button","Help","ItemForm","Item","styles","serviceUri","cleanupContentType","Spinner","Ipfs","buttons","id","title","titleActive","Files","state","isFormShown","isIpfsFormShown","signal","CancelToken","source","toggleForm","e","form","preventDefault","setState","addFile","url","duplicateFiles","props","files","filter","includes","length","getFile","file","push","event","currentTarget","name","value","onChange","forceUpdate","removeFile","index","splice","cancel","contentType","found","method","headers","data","cancelToken","token","response","result","contentLength","compression","isCancel","error","message","help","placeholder","JSON","stringify","newItems","itemsList","map","item","generate","button","isActive"],"mappings":"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","sourcesContent":["import React, {\r\n    lazy,\r\n    Suspense,\r\n    FormEvent,\r\n    PureComponent,\r\n    ChangeEvent\r\n} from 'react'\r\nimport axios from 'axios'\r\nimport { Logger, File } from '@oceanprotocol/squid'\r\nimport shortid from 'shortid'\r\nimport Button from '../../../components/atoms/Button'\r\nimport Help from '../../../components/atoms/Form/Help'\r\nimport ItemForm from './ItemForm'\r\nimport Item from './Item'\r\nimport styles from './index.module.scss'\r\n\r\nimport { serviceUri } from '../../../config'\r\nimport cleanupContentType from '../../../utils/cleanupContentType'\r\nimport Spinner from '../../../components/atoms/Spinner'\r\n\r\nconst Ipfs = lazy(() => import('./Ipfs'))\r\n\r\nexport interface FilePublish extends File {\r\n    found: boolean // non-standard\r\n}\r\n\r\ninterface FilesProps {\r\n    files: File[]\r\n    placeholder: string\r\n    help?: string\r\n    name: string\r\n    onChange(\r\n        event:\r\n            | ChangeEvent<HTMLInputElement>\r\n            | FormEvent<HTMLInputElement>\r\n            | ChangeEvent<HTMLSelectElement>\r\n            | ChangeEvent<HTMLTextAreaElement>\r\n    ): void\r\n}\r\n\r\ninterface FilesStates {\r\n    isFormShown: boolean\r\n    isIpfsFormShown: boolean\r\n}\r\n\r\nconst buttons = [\r\n    {\r\n        id: 'url',\r\n        title: '+ From URL',\r\n        titleActive: '- Cancel'\r\n    },\r\n    {\r\n        id: 'ipfs',\r\n        title: '+ Add to IPFS',\r\n        titleActive: '- Cancel'\r\n    }\r\n]\r\n\r\nexport default class Files extends PureComponent<FilesProps, FilesStates> {\r\n    public state: FilesStates = {\r\n        isFormShown: false,\r\n        isIpfsFormShown: false\r\n    }\r\n\r\n    // for canceling axios requests\r\n    public signal = axios.CancelToken.source()\r\n\r\n    public componentWillUnmount() {\r\n        this.signal.cancel()\r\n    }\r\n\r\n    private toggleForm = (e: Event, form: string) => {\r\n        e.preventDefault()\r\n\r\n        this.setState({\r\n            isFormShown: form === 'url' ? !this.state.isFormShown : false,\r\n            isIpfsFormShown:\r\n                form === 'ipfs' ? !this.state.isIpfsFormShown : false\r\n        })\r\n    }\r\n\r\n    private async getFile(url: string) {\r\n        const file: FilePublish = {\r\n            url,\r\n            contentType: '',\r\n            found: false // non-standard\r\n        }\r\n\r\n        try {\r\n            const response = await axios({\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                url: `${serviceUri}/api/v1/urlcheck`,\r\n                data: { url },\r\n                cancelToken: this.signal.token\r\n            })\r\n\r\n            const { contentLength, contentType, found } = response.data.result\r\n\r\n            if (contentLength) file.contentLength = contentLength\r\n            if (contentType) {\r\n                file.contentType = contentType\r\n                file.compression = cleanupContentType(contentType)\r\n            }\r\n\r\n            file.found = found\r\n\r\n            return file\r\n        } catch (error) {\r\n            !axios.isCancel(error) && Logger.error(error.message)\r\n        }\r\n    }\r\n\r\n    private addFile = async (url: string) => {\r\n        // check for duplicate urls\r\n        const duplicateFiles = this.props.files.filter(props =>\r\n            url.includes(props.url)\r\n        )\r\n\r\n        if (duplicateFiles.length > 0) {\r\n            return this.setState({\r\n                isFormShown: false,\r\n                isIpfsFormShown: false\r\n            })\r\n        }\r\n\r\n        const file: FilePublish | undefined = await this.getFile(url)\r\n        file && this.props.files.push(file)\r\n\r\n        const event = {\r\n            currentTarget: {\r\n                name: 'files',\r\n                value: this.props.files\r\n            }\r\n        }\r\n        this.props.onChange(event as any)\r\n\r\n        this.setState({\r\n            isFormShown: false,\r\n            isIpfsFormShown: false\r\n        })\r\n\r\n        this.forceUpdate()\r\n    }\r\n\r\n    private removeFile = (index: number) => {\r\n        this.props.files.splice(index, 1)\r\n        const event = {\r\n            currentTarget: {\r\n                name: 'files',\r\n                value: this.props.files\r\n            }\r\n        }\r\n        this.props.onChange(event as any)\r\n        this.forceUpdate()\r\n    }\r\n\r\n    public render() {\r\n        const { files, help, placeholder, name, onChange } = this.props\r\n        const { isFormShown, isIpfsFormShown } = this.state\r\n\r\n        return (\r\n            <>\r\n                {help && <Help>{help}</Help>}\r\n\r\n                {/* Use hidden input to collect files */}\r\n                <input\r\n                    type=\"hidden\"\r\n                    name={name}\r\n                    value={JSON.stringify(files)}\r\n                    onChange={onChange}\r\n                    data-testid=\"files\"\r\n                />\r\n\r\n                <div className={styles.newItems}>\r\n                    {files.length > 0 && (\r\n                        <ul className={styles.itemsList}>\r\n                            {files.map((item: any, index: number) => (\r\n                                <Item\r\n                                    key={shortid.generate()}\r\n                                    item={item}\r\n                                    removeFile={() => this.removeFile(index)}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n\r\n                    {buttons.map(button => {\r\n                        const isActive =\r\n                            (button.id === 'url' && isFormShown) ||\r\n                            (button.id === 'ipfs' && isIpfsFormShown)\r\n\r\n                        return (\r\n                            <Button\r\n                                key={shortid.generate()}\r\n                                link\r\n                                onClick={(e: Event) =>\r\n                                    this.toggleForm(e, button.id)\r\n                                }\r\n                            >\r\n                                {isActive ? button.titleActive : button.title}\r\n                            </Button>\r\n                        )\r\n                    })}\r\n\r\n                    {isFormShown && (\r\n                        <ItemForm\r\n                            placeholder={placeholder}\r\n                            addFile={this.addFile}\r\n                        />\r\n                    )}\r\n\r\n                    {isIpfsFormShown && (\r\n                        <Suspense fallback={<Spinner message=\"Loading...\" />}>\r\n                            <Ipfs addFile={this.addFile} />\r\n                        </Suspense>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}