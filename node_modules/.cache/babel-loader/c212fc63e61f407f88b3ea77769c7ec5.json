{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Instantiable_abstract_1 = require(\"../Instantiable.abstract\");\n\nvar ContractHandler = function (_super) {\n  __extends(ContractHandler, _super);\n\n  function ContractHandler(config) {\n    var _this = _super.call(this) || this;\n\n    _this.setInstanceConfig(config);\n\n    return _this;\n  }\n\n  ContractHandler.getContract = function (what, networkId) {\n    return ContractHandler.contracts.get(this.getHash(what, networkId));\n  };\n\n  ContractHandler.setContract = function (what, networkId, contractInstance) {\n    ContractHandler.contracts.set(this.getHash(what, networkId), contractInstance);\n  };\n\n  ContractHandler.hasContract = function (what, networkId) {\n    return ContractHandler.contracts.has(this.getHash(what, networkId));\n  };\n\n  ContractHandler.getHash = function (what, networkId) {\n    return what + \"/#\" + networkId;\n  };\n\n  ContractHandler.prototype.get = function (what, optional) {\n    if (optional === void 0) {\n      optional = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var where, networkId, _a, err_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4, this.ocean.keeper.getNetworkName()];\n\n          case 1:\n            where = _b.sent().toLowerCase();\n            return [4, this.ocean.keeper.getNetworkId()];\n\n          case 2:\n            networkId = _b.sent();\n            _b.label = 3;\n\n          case 3:\n            _b.trys.push([3, 6,, 7]);\n\n            _a = ContractHandler.getContract(what, networkId);\n            if (_a) return [3, 5];\n            return [4, this.load(what, where, networkId)];\n\n          case 4:\n            _a = _b.sent();\n            _b.label = 5;\n\n          case 5:\n            return [2, _a];\n\n          case 6:\n            err_1 = _b.sent();\n\n            if (!optional) {\n              this.logger.error('Failed to load', what, 'from', where, err_1);\n            }\n\n            throw err_1;\n\n          case 7:\n            return [2];\n        }\n      });\n    });\n  };\n\n  ContractHandler.prototype.load = function (what, where, networkId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var artifact, code, contract;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.debug('Loading', what, 'from', where);\n            artifact = require(\"@oceanprotocol/keeper-contracts/artifacts/\" + what + \".\" + where + \".json\");\n            return [4, this.web3.eth.getCode(artifact.address)];\n\n          case 1:\n            code = _a.sent();\n\n            if (code === '0x0') {\n              throw new Error(\"No code deployed at address \" + artifact.address + \", sorry.\");\n            }\n\n            contract = new this.web3.eth.Contract(artifact.abi, artifact.address);\n            this.logger.debug('Getting instance of', what, 'from', where, 'at address', artifact.address);\n            ContractHandler.setContract(what, networkId, contract);\n            return [2, ContractHandler.getContract(what, networkId)];\n        }\n      });\n    });\n  };\n\n  ContractHandler.contracts = new Map();\n  return ContractHandler;\n}(Instantiable_abstract_1.Instantiable);\n\nexports.default = ContractHandler;","map":null,"metadata":{},"sourceType":"script"}