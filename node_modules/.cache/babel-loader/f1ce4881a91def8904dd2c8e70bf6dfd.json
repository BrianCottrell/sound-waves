{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nvar Web3Provider_1 = __importDefault(require(\"./keeper/Web3Provider\"));\n\nfunction generateIntantiableConfigFromConfig(config) {\n  var logLevel = typeof config.verbose !== 'number' ? config.verbose ? utils_1.LogLevel.Log : utils_1.LogLevel.None : config.verbose;\n  return {\n    config: config,\n    web3: Web3Provider_1.default.getWeb3(config),\n    logger: new utils_1.Logger(logLevel)\n  };\n}\n\nexports.generateIntantiableConfigFromConfig = generateIntantiableConfigFromConfig;\n\nvar Instantiable = function () {\n  function Instantiable() {}\n\n  Object.defineProperty(Instantiable.prototype, \"ocean\", {\n    get: function get() {\n      if (!this._ocean) {\n        this.logger.error('Ocean instance is not defined.');\n      }\n\n      return this._ocean;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Instantiable.prototype, \"web3\", {\n    get: function get() {\n      if (!this._web3) {\n        this.logger.error('Web3 instance is not defined.');\n        this.logger.error('Using default instance.');\n        return Web3Provider_1.default.getWeb3();\n      }\n\n      return this._web3;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Instantiable.prototype, \"config\", {\n    get: function get() {\n      if (!this._config) {\n        this.logger.error('Config instance is not defined.');\n      }\n\n      return this._config;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Instantiable.prototype, \"logger\", {\n    get: function get() {\n      if (!this._logger) {\n        utils_1.LoggerInstance.error('Logger instance is not defined.');\n        utils_1.LoggerInstance.error('Using default instance.');\n        return utils_1.LoggerInstance;\n      }\n\n      return this._logger;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Instantiable.prototype, \"instanceConfig\", {\n    get: function get() {\n      var _a = this,\n          ocean = _a.ocean,\n          web3 = _a.web3,\n          config = _a.config,\n          logger = _a.logger;\n\n      return {\n        ocean: ocean,\n        web3: web3,\n        config: config,\n        logger: logger\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Instantiable.getInstance = function (config) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        utils_1.LoggerInstance.warn('getInstance() methods has needs to be added to child class.');\n        return [2];\n      });\n    });\n  };\n\n  Instantiable.setInstanceConfig = function (instance, _a) {\n    var ocean = _a.ocean,\n        config = _a.config,\n        web3 = _a.web3,\n        logger = _a.logger;\n    instance._ocean = ocean;\n    instance._config = config;\n    instance._web3 = web3;\n    instance._logger = logger;\n  };\n\n  Instantiable.prototype.setInstanceConfig = function (config) {\n    Instantiable.setInstanceConfig(this, config);\n  };\n\n  return Instantiable;\n}();\n\nexports.Instantiable = Instantiable;","map":null,"metadata":{},"sourceType":"script"}