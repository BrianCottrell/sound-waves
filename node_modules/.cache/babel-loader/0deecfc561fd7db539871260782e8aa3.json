{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ContractBase_1 = __importDefault(require(\"../ContractBase\"));\n\nvar utils_1 = require(\"../../../utils\");\n\nvar ConditionState;\n\n(function (ConditionState) {\n  ConditionState[ConditionState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n  ConditionState[ConditionState[\"Unfulfilled\"] = 1] = \"Unfulfilled\";\n  ConditionState[ConditionState[\"Fulfilled\"] = 2] = \"Fulfilled\";\n  ConditionState[ConditionState[\"Aborted\"] = 3] = \"Aborted\";\n})(ConditionState = exports.ConditionState || (exports.ConditionState = {}));\n\nexports.conditionStateNames = ['Uninitialized', 'Unfulfilled', 'Fulfilled', 'Aborted'];\n\nvar Condition = function (_super) {\n  __extends(Condition, _super);\n\n  function Condition(contractName) {\n    return _super.call(this, contractName) || this;\n  }\n\n  Condition.getInstance = function (config, conditionName, conditionsClass) {\n    return __awaiter(this, void 0, void 0, function () {\n      var condition;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            condition = new conditionsClass(conditionName);\n            return [4, condition.init(config)];\n\n          case 1:\n            _a.sent();\n\n            return [2, condition];\n        }\n      });\n    });\n  };\n\n  Condition.prototype.hashValues = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return this.call('hashValues', args);\n  };\n\n  Condition.prototype.fulfill = function (agreementId, args, from) {\n    return this.sendFrom('fulfill', __spreadArrays([utils_1.zeroX(agreementId)], args), from);\n  };\n\n  Condition.prototype.generateIdHash = function (agreementId) {\n    var values = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      values[_i - 1] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.generateId;\n            _b = [agreementId];\n            return [4, this.hashValues.apply(this, values)];\n\n          case 1:\n            return [2, _a.apply(this, _b.concat([_c.sent()]))];\n        }\n      });\n    });\n  };\n\n  Condition.prototype.generateId = function (agreementId, valueHash) {\n    return this.call('generateId', [utils_1.zeroX(agreementId), valueHash]);\n  };\n\n  Condition.prototype.abortByTimeOut = function (agreementId, from) {\n    return this.sendFrom('abortByTimeOut', [utils_1.zeroX(agreementId)], from);\n  };\n\n  Condition.prototype.getConditionFulfilledEvent = function (agreementId) {\n    return this.getEvent('Fulfilled', {\n      agreementId: utils_1.zeroX(agreementId)\n    });\n  };\n\n  return Condition;\n}(ContractBase_1.default);\n\nexports.Condition = Condition;","map":null,"metadata":{},"sourceType":"script"}