{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\src\\\\components\\\\organisms\\\\WalletSelector.tsx\";\nimport React, { PureComponent } from 'react';\nimport Modal from '../atoms/Modal';\nimport { User } from '../../context';\nimport styles from './WalletSelector.module.scss';\nimport Button from '../atoms/Button';\nimport content from '../../data/wallets.json';\n\nvar WalletSelector =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(WalletSelector, _PureComponent);\n\n  function WalletSelector() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WalletSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WalletSelector)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isModalOpen: false\n    };\n\n    _this.handleToggleModal = function (e) {\n      e && e.preventDefault();\n\n      _this.setState({\n        isModalOpen: !_this.state.isModalOpen\n      });\n    };\n\n    _this.loginBurnerWallet = function () {\n      _this.context.loginBurnerWallet();\n\n      _this.handleToggleModal();\n    };\n\n    _this.loginMetamask = function () {\n      _this.context.loginMetamask();\n\n      _this.context.logoutBurnerWallet();\n\n      _this.handleToggleModal();\n    };\n\n    _this.WalletButton = function (_ref) {\n      var title = _ref.title,\n          description = _ref.description,\n          icon = _ref.icon;\n      var active = title === 'Burner Wallet' && _this.context.isBurner || title === 'MetaMask' && !_this.context.isBurner;\n      return React.createElement(\"button\", {\n        className: active ? styles.buttonActive : styles.button,\n        onClick: title === 'MetaMask' ? _this.loginMetamask : _this.loginBurnerWallet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: styles.buttonTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.buttonIcon,\n        role: \"img\",\n        \"aria-label\": title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, icon), title), React.createElement(\"span\", {\n        className: styles.buttonDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, description), active && React.createElement(\"span\", {\n        className: styles.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Selected\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(WalletSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        link: true,\n        className: styles.openLink,\n        onClick: this.handleToggleModal,\n        \"data-action\": \"wallet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, content.title), React.createElement(Modal, {\n        title: content.title,\n        description: content.description,\n        isOpen: this.state.isModalOpen,\n        toggleModal: this.handleToggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, content.buttons.map(function (_ref2) {\n        var title = _ref2.title,\n            description = _ref2.description,\n            icon = _ref2.icon;\n        return React.createElement(_this2.WalletButton, {\n          key: title,\n          title: title,\n          icon: icon,\n          description: description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return WalletSelector;\n}(PureComponent);\n\nWalletSelector.contextType = User;\nexport { WalletSelector as default };","map":{"version":3,"sources":["C:/Users/Brian/Projects/ResearchHub/research-hub/client/src/components/organisms/WalletSelector.tsx"],"names":["React","PureComponent","Modal","User","styles","Button","content","WalletSelector","state","isModalOpen","handleToggleModal","e","preventDefault","setState","loginBurnerWallet","context","loginMetamask","logoutBurnerWallet","WalletButton","title","description","icon","active","isBurner","buttonActive","button","buttonTitle","buttonIcon","buttonDescription","selected","openLink","info","buttons","map","contextType"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport Modal from '../atoms/Modal'\r\nimport { User } from '../../context'\r\nimport styles from './WalletSelector.module.scss'\r\nimport Button from '../atoms/Button'\r\nimport content from '../../data/wallets.json'\r\n\r\nexport default class WalletSelector extends PureComponent<\r\n    {},\r\n    { isModalOpen: boolean }\r\n> {\r\n    public static contextType = User\r\n\r\n    public state = {\r\n        isModalOpen: false\r\n    }\r\n\r\n    private handleToggleModal = (e?: Event) => {\r\n        e && e.preventDefault()\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    private loginBurnerWallet = () => {\r\n        this.context.loginBurnerWallet()\r\n        this.handleToggleModal()\r\n    }\r\n\r\n    private loginMetamask = () => {\r\n        this.context.loginMetamask()\r\n        this.context.logoutBurnerWallet()\r\n        this.handleToggleModal()\r\n    }\r\n\r\n    private WalletButton = ({\r\n        title,\r\n        description,\r\n        icon\r\n    }: {\r\n        title: string\r\n        description: string\r\n        icon: string\r\n    }) => {\r\n        const active =\r\n            (title === 'Burner Wallet' && this.context.isBurner) ||\r\n            (title === 'MetaMask' && !this.context.isBurner)\r\n\r\n        return (\r\n            <button\r\n                className={active ? styles.buttonActive : styles.button}\r\n                onClick={\r\n                    title === 'MetaMask'\r\n                        ? this.loginMetamask\r\n                        : this.loginBurnerWallet\r\n                }\r\n            >\r\n                <div>\r\n                    <h3 className={styles.buttonTitle}>\r\n                        <span\r\n                            className={styles.buttonIcon}\r\n                            role=\"img\"\r\n                            aria-label={title}\r\n                        >\r\n                            {icon}\r\n                        </span>\r\n                        {title}\r\n                    </h3>\r\n                    <span className={styles.buttonDescription}>\r\n                        {description}\r\n                    </span>\r\n                    {active && (\r\n                        <span className={styles.selected}>Selected</span>\r\n                    )}\r\n                </div>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <>\r\n                <Button\r\n                    link\r\n                    className={styles.openLink}\r\n                    onClick={this.handleToggleModal}\r\n                    data-action=\"wallet\"\r\n                >\r\n                    {content.title}\r\n                </Button>\r\n                <Modal\r\n                    title={content.title}\r\n                    description={content.description}\r\n                    isOpen={this.state.isModalOpen}\r\n                    toggleModal={this.handleToggleModal}\r\n                >\r\n                    <div className={styles.info}>\r\n                        {content.buttons.map(({ title, description, icon }) => (\r\n                            <this.WalletButton\r\n                                key={title}\r\n                                title={title}\r\n                                icon={icon}\r\n                                description={description}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}