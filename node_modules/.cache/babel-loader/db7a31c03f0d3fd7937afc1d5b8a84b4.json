{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SubscribableObserver_1 = require(\"./SubscribableObserver\");\n\nvar SubscribablePromise = function () {\n  function SubscribablePromise(executor) {\n    var _this = this;\n\n    this.observer = new SubscribableObserver_1.SubscribableObserver();\n    this.promise = Object.assign(new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        _this.observer.subscribe(undefined, resolve, reject);\n      }, 0);\n    }), this);\n    setTimeout(function () {\n      return _this.init(executor);\n    }, 1);\n  }\n\n  SubscribablePromise.prototype.subscribe = function (onNext) {\n    return this.observer.subscribe(onNext);\n  };\n\n  SubscribablePromise.prototype.next = function (onNext) {\n    this.observer.subscribe(onNext);\n    return this;\n  };\n\n  SubscribablePromise.prototype.then = function (onfulfilled, onrejected) {\n    return Object.assign(this.promise.then(onfulfilled, onrejected), this);\n  };\n\n  SubscribablePromise.prototype.catch = function (onrejected) {\n    return Object.assign(this.promise.catch(onrejected), this);\n  };\n\n  SubscribablePromise.prototype.finally = function (onfinally) {\n    return Object.assign(this.promise.finally(onfinally), this);\n  };\n\n  SubscribablePromise.prototype.init = function (executor) {\n    var _this = this;\n\n    var execution = executor(this.observer);\n    Promise.resolve(execution).then(function (result) {\n      if (typeof execution.then === 'function') {\n        _this.observer.complete(result);\n      }\n    }).catch(function (result) {\n      if (typeof execution.then === 'function') {\n        _this.observer.error(result);\n      }\n    });\n  };\n\n  return SubscribablePromise;\n}();\n\nexports.SubscribablePromise = SubscribablePromise;","map":null,"metadata":{},"sourceType":"script"}