{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\src\\\\components\\\\templates\\\\Asset\\\\index.tsx\";\nimport React, { Component } from 'react';\nimport { Logger } from '@oceanprotocol/squid';\nimport Route from '../Route';\nimport Spinner from '../../atoms/Spinner';\nimport { User } from '../../../context';\nimport AssetDetails from './AssetDetails';\nimport stylesApp from '../../../App.module.scss';\nimport Content from '../../atoms/Content';\nimport CategoryImage from '../../atoms/CategoryImage';\nimport styles from './index.module.scss';\nimport withTracker from '../../../hoc/withTracker';\nimport Web3message from '../../organisms/Web3message';\n\nvar Asset =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Asset, _Component);\n\n  function Asset() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Asset);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Asset)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ddo: {},\n      metadata: {\n        main: {\n          name: ''\n        }\n      },\n      error: '',\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Asset, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.getData();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var ocean, ddo, _ddo$findServiceByTyp, attributes;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                ocean = this.context.ocean;\n                _context2.next = 4;\n                return ocean.assets.resolve(this.props.match.params.did);\n\n              case 4:\n                ddo = _context2.sent;\n                _ddo$findServiceByTyp = ddo.findServiceByType('metadata'), attributes = _ddo$findServiceByTyp.attributes;\n                this.setState({\n                  ddo: ddo,\n                  metadata: attributes,\n                  isLoading: false\n                });\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                Logger.error(_context2.t0.message);\n                this.setState({\n                  error: \"We encountered an error: \".concat(_context2.t0.message, \".\")\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          metadata = _this$state.metadata,\n          ddo = _this$state.ddo,\n          error = _this$state.error,\n          isLoading = _this$state.isLoading;\n      var main = metadata.main,\n          additionalInformation = metadata.additionalInformation;\n      var hasError = error !== '';\n      return isLoading && !hasError ? React.createElement(\"div\", {\n        className: stylesApp.loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        message: \"Loading asset...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })) : hasError ? React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, error), React.createElement(Web3message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })) : React.createElement(Route, {\n        title: main.name,\n        image: additionalInformation && additionalInformation.categories && React.createElement(CategoryImage, {\n          header: true,\n          dimmed: true,\n          category: additionalInformation.categories[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(AssetDetails, {\n        metadata: metadata,\n        ddo: ddo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Asset;\n}(Component);\n\nAsset.contextType = User;\nexport default withTracker(Asset);","map":{"version":3,"sources":["C:/Users/Brian/Projects/SoundWaves/sound-waves/client/src/components/templates/Asset/index.tsx"],"names":["React","Component","Logger","Route","Spinner","User","AssetDetails","stylesApp","Content","CategoryImage","styles","withTracker","Web3message","Asset","state","ddo","metadata","main","name","error","isLoading","getData","ocean","context","assets","resolve","props","match","params","did","findServiceByType","attributes","setState","message","additionalInformation","hasError","loader","categories","contextType"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAwBC,MAAxB,QAAsC,sBAAtC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;IAiBMC,K;;;;;;;;;;;;;;;;;UAGKC,K,GAAQ;AACXC,MAAAA,GAAG,EAAG,EADK;AAEXC,MAAAA,QAAQ,EAAG;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAAR,OAFA;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,SAAS,EAAE;AAJA,K;;;;;;;;;;;;;;AAQX,qBAAKC,OAAL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKYC,gBAAAA,K,GAAU,KAAKC,O,CAAfD,K;;uBACUA,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,GAA7C,C;;;AAAZd,gBAAAA,G;wCACiBA,GAAG,CAACe,iBAAJ,CAAsB,UAAtB,C,EAAfC,U,yBAAAA,U;AACR,qBAAKC,QAAL,CAAc;AACVjB,kBAAAA,GAAG,EAAHA,GADU;AAEVC,kBAAAA,QAAQ,EAAEe,UAFA;AAGVX,kBAAAA,SAAS,EAAE;AAHD,iBAAd;;;;;;;AAMAlB,gBAAAA,MAAM,CAACiB,KAAP,CAAa,aAAMc,OAAnB;AACA,qBAAKD,QAAL,CAAc;AACVb,kBAAAA,KAAK,qCAA8B,aAAMc,OAApC;AADK,iBAAd;;;;;;;;;;;;;;;;;;6BAMQ;AAAA,wBACgC,KAAKnB,KADrC;AAAA,UACJE,QADI,eACJA,QADI;AAAA,UACMD,GADN,eACMA,GADN;AAAA,UACWI,KADX,eACWA,KADX;AAAA,UACkBC,SADlB,eACkBA,SADlB;AAAA,UAEJH,IAFI,GAE4BD,QAF5B,CAEJC,IAFI;AAAA,UAEEiB,qBAFF,GAE4BlB,QAF5B,CAEEkB,qBAFF;AAIZ,UAAMC,QAAQ,GAAGhB,KAAK,KAAK,EAA3B;AAEA,aAAOC,SAAS,IAAI,CAACe,QAAd,GACH;AAAK,QAAA,SAAS,EAAE5B,SAAS,CAAC6B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADG,GAIHD,QAAQ,GACR,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEzB,MAAM,CAACS,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BA,KAA/B,CADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADQ,GAMR,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEF,IAAI,CAACC,IADhB;AAEI,QAAA,KAAK,EACDgB,qBAAqB,IACrBA,qBAAqB,CAACG,UADtB,IAEI,oBAAC,aAAD;AACI,UAAA,MAAM,MADV;AAEI,UAAA,MAAM,MAFV;AAGI,UAAA,QAAQ,EAAEH,qBAAqB,CAACG,UAAtB,CAAiC,CAAjC,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAErB,QAAxB;AAAkC,QAAA,GAAG,EAAED,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAbJ,CAVJ;AA4BH;;;;EAlEed,S;;AAAdY,K,CACYyB,W,GAAcjC,I;AAoEhC,eAAeM,WAAW,CAACE,KAAD,CAA1B","sourcesContent":["import React, { Component } from 'react'\r\nimport { DDO, MetaData, Logger } from '@oceanprotocol/squid'\r\nimport Route from '../Route'\r\nimport Spinner from '../../atoms/Spinner'\r\nimport { User } from '../../../context'\r\nimport AssetDetails from './AssetDetails'\r\nimport stylesApp from '../../../App.module.scss'\r\nimport Content from '../../atoms/Content'\r\nimport CategoryImage from '../../atoms/CategoryImage'\r\nimport styles from './index.module.scss'\r\nimport withTracker from '../../../hoc/withTracker'\r\nimport Web3message from '../../organisms/Web3message'\r\n\r\ninterface AssetProps {\r\n    match: {\r\n        params: {\r\n            did: string\r\n        }\r\n    }\r\n}\r\n\r\ninterface AssetState {\r\n    ddo: DDO\r\n    metadata: MetaData\r\n    error: string\r\n    isLoading: boolean\r\n}\r\n\r\nclass Asset extends Component<AssetProps, AssetState> {\r\n    public static contextType = User\r\n\r\n    public state = {\r\n        ddo: ({} as any) as DDO,\r\n        metadata: ({ main: { name: '' } } as any) as MetaData,\r\n        error: '',\r\n        isLoading: true\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    private async getData() {\r\n        try {\r\n            const { ocean } = this.context\r\n            const ddo = await ocean.assets.resolve(this.props.match.params.did)\r\n            const { attributes } = ddo.findServiceByType('metadata')\r\n            this.setState({\r\n                ddo,\r\n                metadata: attributes,\r\n                isLoading: false\r\n            })\r\n        } catch (error) {\r\n            Logger.error(error.message)\r\n            this.setState({\r\n                error: `We encountered an error: ${error.message}.`\r\n            })\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        const { metadata, ddo, error, isLoading } = this.state\r\n        const { main, additionalInformation } = metadata\r\n\r\n        const hasError = error !== ''\r\n\r\n        return isLoading && !hasError ? (\r\n            <div className={stylesApp.loader}>\r\n                <Spinner message=\"Loading asset...\" />\r\n            </div>\r\n        ) : hasError ? (\r\n            <Content>\r\n                <div className={styles.error}>{error}</div>\r\n                <Web3message />\r\n            </Content>\r\n        ) : (\r\n            <Route\r\n                title={main.name}\r\n                image={\r\n                    additionalInformation &&\r\n                    additionalInformation.categories && (\r\n                        <CategoryImage\r\n                            header\r\n                            dimmed\r\n                            category={additionalInformation.categories[0]}\r\n                        />\r\n                    )\r\n                }\r\n            >\r\n                <Content>\r\n                    <AssetDetails metadata={metadata} ddo={ddo} />\r\n                </Content>\r\n            </Route>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTracker(Asset)\r\n"]},"metadata":{},"sourceType":"module"}