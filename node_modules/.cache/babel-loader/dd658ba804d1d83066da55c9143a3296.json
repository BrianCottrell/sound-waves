{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\src\\\\components\\\\organisms\\\\ChannelTeaser.tsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from '../../context';\nimport { Logger } from '@oceanprotocol/squid';\nimport Spinner from '../atoms/Spinner';\nimport AssetTeaser from '../molecules/AssetTeaser';\nimport styles from './ChannelTeaser.module.scss';\nimport channels from '../../data/channels.json';\nimport CategoryImage from '../atoms/CategoryImage';\n\nvar ChannelTeaser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChannelTeaser, _Component);\n\n  function ChannelTeaser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChannelTeaser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChannelTeaser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.channel = channels.items.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === _this.props.channel;\n    }).map(function (channel) {\n      return channel;\n    })[0];\n    _this.state = {\n      channelAssets: [],\n      isLoadingChannel: true\n    };\n    _this.getChannelAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var ocean, searchQuery, search;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ocean = _this.context.ocean;\n              searchQuery = {\n                offset: 2,\n                page: 1,\n                query: {\n                  tags: [_this.channel.tag]\n                },\n                sort: {\n                  created: -1\n                }\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return ocean.assets.query(searchQuery);\n\n            case 5:\n              search = _context.sent;\n\n              _this.setState({\n                channelAssets: search.results,\n                isLoadingChannel: false\n              });\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              Logger.error(_context.t0.message);\n\n              _this.setState({\n                isLoadingChannel: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n    return _this;\n  }\n\n  _createClass(ChannelTeaser, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.getChannelAssets();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          channelAssets = _this$state.channelAssets,\n          isLoadingChannel = _this$state.isLoadingChannel;\n      var _this$channel = this.channel,\n          title = _this$channel.title,\n          tag = _this$channel.tag,\n          teaser = _this$channel.teaser;\n      return React.createElement(\"div\", {\n        className: styles.channel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: styles.channelHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/channels/\".concat(tag),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: styles.channelTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, title), React.createElement(CategoryImage, {\n        category: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: styles.channelTeaser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, teaser), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Browse the channel \\u2192\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, isLoadingChannel ? React.createElement(Spinner, {\n        message: \"Loading...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : channelAssets && channelAssets.length ? React.createElement(\"div\", {\n        className: styles.channelResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, channelAssets.map(function (asset) {\n        return React.createElement(AssetTeaser, {\n          key: asset.id,\n          asset: asset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"No research papers found.\")));\n    }\n  }]);\n\n  return ChannelTeaser;\n}(Component);\n\nChannelTeaser.contextType = User;\nexport { ChannelTeaser as default };","map":{"version":3,"sources":["C:/Users/Brian/Projects/ResearchHub/research-hub/client/src/components/organisms/ChannelTeaser.tsx"],"names":["React","Component","Link","User","Logger","Spinner","AssetTeaser","styles","channels","CategoryImage","ChannelTeaser","channel","items","filter","tag","props","map","state","channelAssets","isLoadingChannel","getChannelAssets","ocean","context","searchQuery","offset","page","query","tags","sort","created","assets","search","setState","results","error","message","title","teaser","channelHeader","channelTitle","channelTeaser","length","channelResults","asset","id","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { User } from '../../context';\r\nimport { Logger } from '@oceanprotocol/squid';\r\nimport Spinner from '../atoms/Spinner';\r\nimport AssetTeaser from '../molecules/AssetTeaser';\r\nimport styles from './ChannelTeaser.module.scss';\r\nimport channels from '../../data/channels.json';\r\nimport CategoryImage from '../atoms/CategoryImage';\r\n\r\ninterface ChannelTeaserProps {\r\n\tchannel: string;\r\n}\r\n\r\ninterface ChannelTeaserState {\r\n\tchannelAssets?: any[];\r\n\tisLoadingChannel?: boolean;\r\n}\r\n\r\nexport default class ChannelTeaser extends Component<ChannelTeaserProps, ChannelTeaserState> {\r\n\tpublic static contextType = User;\r\n\r\n\t// Get channel content\r\n\tpublic channel = channels.items.filter(({ tag }) => tag === this.props.channel).map((channel) => channel)[0];\r\n\r\n\tpublic state = {\r\n\t\tchannelAssets: [],\r\n\t\tisLoadingChannel: true\r\n\t};\r\n\r\n\tpublic async componentDidMount() {\r\n\t\tthis.getChannelAssets();\r\n\t}\r\n\r\n\tprivate getChannelAssets = async () => {\r\n\t\tconst { ocean } = this.context;\r\n\r\n\t\tconst searchQuery = {\r\n\t\t\toffset: 2,\r\n\t\t\tpage: 1,\r\n\t\t\tquery: {\r\n\t\t\t\ttags: [ this.channel.tag ]\r\n\t\t\t},\r\n\t\t\tsort: {\r\n\t\t\t\tcreated: -1\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst search = await ocean.assets.query(searchQuery);\r\n\t\t\tthis.setState({\r\n\t\t\t\tchannelAssets: search.results,\r\n\t\t\t\tisLoadingChannel: false\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tLogger.error(error.message);\r\n\t\t\tthis.setState({ isLoadingChannel: false });\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render() {\r\n\t\tconst { channelAssets, isLoadingChannel } = this.state;\r\n\t\tconst { title, tag, teaser } = this.channel;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.channel}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<header className={styles.channelHeader}>\r\n\t\t\t\t\t\t<Link to={`/channels/${tag}`}>\r\n\t\t\t\t\t\t\t<h2 className={styles.channelTitle}>{title}</h2>\r\n\t\t\t\t\t\t\t<CategoryImage category={title} />\r\n\r\n\t\t\t\t\t\t\t<p className={styles.channelTeaser}>{teaser}</p>\r\n\t\t\t\t\t\t\t<p>Browse the channel →</p>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{isLoadingChannel ? (\r\n\t\t\t\t\t\t<Spinner message=\"Loading...\" />\r\n\t\t\t\t\t) : channelAssets && channelAssets.length ? (\r\n\t\t\t\t\t\t<div className={styles.channelResults}>\r\n\t\t\t\t\t\t\t{channelAssets.map((asset: any) => <AssetTeaser key={asset.id} asset={asset} />)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>No research papers found.</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}