{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nexports.__esModule = true;\n\nvar node_fetch_1 = require(\"node-fetch\");\n\nvar HexHelper_1 = require(\"./tools/HexHelper\");\n\nvar ParityClient = function () {\n  function ParityClient(config) {\n    this.password = config.password;\n    this.address = config.address;\n    this.url = config.url;\n  }\n\n  ParityClient.prototype.signKeyId = function (keyId) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2, this.sendJsonRpcRequest(\"secretstore_signRawHash\", [this.address, this.password, HexHelper_1[\"default\"].add0xPrefix(keyId)]).then(function (result) {\n          return result;\n        })];\n      });\n    });\n  };\n\n  ParityClient.prototype.generateDocumentKeyFromServerKey = function (serverKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2, this.sendJsonRpcRequest(\"secretstore_generateDocumentKey\", [this.address, this.password, serverKey]).then(function (result) {\n          var generatedKey = {\n            commonPoint: result.common_point,\n            encryptedKey: result.encrypted_key,\n            encryptedPoint: result.encrypted_point\n          };\n          return generatedKey;\n        })];\n      });\n    });\n  };\n\n  ParityClient.prototype.encryptDocument = function (encryptedKey, document) {\n    var documentString = JSON.stringify(document, null, 2);\n    var documentHexed = HexHelper_1[\"default\"].add0xPrefix(Buffer.from(documentString).toString(\"hex\"));\n    return this.sendJsonRpcRequest(\"secretstore_encrypt\", [this.address, this.password, encryptedKey, documentHexed]).then(function (result) {\n      return result;\n    });\n  };\n\n  ParityClient.prototype.decryptDocument = function (decryptedSecret, commonPoint, decryptShadows, encryptedDocument) {\n    return this.sendJsonRpcRequest(\"secretstore_shadowDecrypt\", [this.address, this.password, decryptedSecret, commonPoint, decryptShadows, encryptedDocument]).then(function (result) {\n      var documentString = Buffer.from(HexHelper_1[\"default\"].removeLeading0xPrefix(result), \"hex\").toString(\"utf8\");\n\n      try {\n        documentString = JSON.parse(documentString);\n      } catch (_a) {}\n\n      return documentString;\n    });\n  };\n\n  ParityClient.prototype.sendJsonRpcRequest = function (methodName, paramsList) {\n    return node_fetch_1[\"default\"](this.url, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        method: methodName,\n        params: paramsList,\n        id: 1\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(\"Calling method \\\"\" + methodName + \"\\\" on parity client failed with \" + response.statusText);\n    }).then(function (result) {\n      if (result.result) {\n        return result.result;\n      }\n\n      throw new Error(\"Parity node returned an error \" + result.error.message + \" \" + result.error.data);\n    })[\"catch\"](function (err) {\n      throw new Error(\"Calling method \\\"\" + methodName + \"\\\" on parity client failed. \" + err);\n    });\n  };\n\n  return ParityClient;\n}();\n\nexports[\"default\"] = ParityClient;","map":null,"metadata":{},"sourceType":"script"}