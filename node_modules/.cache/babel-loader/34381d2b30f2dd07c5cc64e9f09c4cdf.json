{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\SoundWaves\\\\sound-waves\\\\client\\\\src\\\\components\\\\templates\\\\Channel.tsx\";\nimport React, { PureComponent } from 'react';\nimport { Logger } from '@oceanprotocol/squid';\nimport Spinner from '../../components/atoms/Spinner';\nimport Route from '../../components/templates/Route';\nimport { User } from '../../context';\nimport AssetTeaser from '../molecules/AssetTeaser';\nimport Pagination from '../../components/molecules/Pagination';\nimport styles from './Channel.module.scss';\nimport Content from '../../components/atoms/Content';\nimport channels from '../../data/channels.json';\nimport CategoryImage from '../atoms/CategoryImage';\n\nvar Channel =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Channel, _PureComponent);\n\n  function Channel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Channel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Channel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.channel = channels.items.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === _this.props.match.params.channel;\n    }).map(function (channel) {\n      return channel;\n    })[0];\n    _this.state = {\n      results: [],\n      totalResults: 0,\n      offset: 25,\n      totalPages: 1,\n      currentPage: 1,\n      isLoading: true,\n      title: _this.channel.title,\n      description: _this.channel.description\n    };\n    _this.getChannelAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var ocean, _this$state, offset, currentPage, searchQuery, search;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ocean = _this.context.ocean;\n              _this$state = _this.state, offset = _this$state.offset, currentPage = _this$state.currentPage;\n              searchQuery = {\n                offset: offset,\n                page: currentPage,\n                query: {\n                  tags: [_this.channel.tag]\n                },\n                sort: {\n                  created: -1\n                }\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return ocean.assets.query(searchQuery);\n\n            case 6:\n              search = _context.sent;\n\n              _this.setState({\n                results: search.results,\n                totalResults: search.totalResults,\n                totalPages: search.totalPages,\n                isLoading: false\n              });\n\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              Logger.error(_context.t0.message);\n\n              _this.setState({\n                isLoading: false\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    _this.handlePageClick =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(data) {\n        var toPage;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // react-pagination starts counting at 0, we start at 1\n                toPage = data.selected + 1;\n\n                _this.props.history.push({\n                  search: \"?page=\".concat(toPage)\n                });\n\n                _context2.next = 4;\n                return _this.setState({\n                  currentPage: toPage,\n                  isLoading: true\n                });\n\n              case 4:\n                _context2.next = 6;\n                return _this.getChannelAssets();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.renderResults = function () {\n      return _this.state.isLoading ? React.createElement(Spinner, {\n        message: \"Searching...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }) : _this.state.results && _this.state.results.length ? React.createElement(\"div\", {\n        className: styles.results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, _this.state.results.map(function (asset) {\n        return React.createElement(AssetTeaser, {\n          key: asset.id,\n          asset: asset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"No research apps found.\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Channel, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.getChannelAssets();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          totalPages = _this$state2.totalPages,\n          currentPage = _this$state2.currentPage;\n      return React.createElement(Route, {\n        title: title,\n        description: description,\n        image: React.createElement(CategoryImage, {\n          header: true,\n          category: title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Content, {\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.renderResults(), React.createElement(Pagination, {\n        totalPages: totalPages,\n        currentPage: currentPage,\n        handlePageClick: this.handlePageClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Channel;\n}(PureComponent);\n\nexport { Channel as default };\nChannel.contextType = User;","map":{"version":3,"sources":["C:/Users/Brian/Projects/SoundWaves/sound-waves/client/src/components/templates/Channel.tsx"],"names":["React","PureComponent","Logger","Spinner","Route","User","AssetTeaser","Pagination","styles","Content","channels","CategoryImage","Channel","channel","items","filter","tag","props","match","params","map","state","results","totalResults","offset","totalPages","currentPage","isLoading","title","description","getChannelAssets","ocean","context","searchQuery","page","query","tags","sort","created","assets","search","setState","error","message","handlePageClick","data","toPage","selected","history","push","renderResults","length","asset","id","contextType"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Logger } from '@oceanprotocol/squid';\r\nimport { History } from 'history';\r\nimport Spinner from '../../components/atoms/Spinner';\r\nimport Route from '../../components/templates/Route';\r\nimport { User } from '../../context';\r\nimport AssetTeaser from '../molecules/AssetTeaser';\r\nimport Pagination from '../../components/molecules/Pagination';\r\nimport styles from './Channel.module.scss';\r\nimport Content from '../../components/atoms/Content';\r\nimport channels from '../../data/channels.json';\r\nimport CategoryImage from '../atoms/CategoryImage';\r\n\r\ninterface ChannelProps {\r\n\thistory: History;\r\n\tmatch: {\r\n\t\tparams: {\r\n\t\t\tchannel: string;\r\n\t\t};\r\n\t};\r\n}\r\n\r\ninterface ChannelState {\r\n\tresults: any[];\r\n\ttotalResults: number;\r\n\toffset: number;\r\n\ttotalPages: number;\r\n\tcurrentPage: number;\r\n\tisLoading: boolean;\r\n\ttitle: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport default class Channel extends PureComponent<ChannelProps, ChannelState> {\r\n\t// get content data based on received channel param\r\n\tpublic channel = channels.items\r\n\t\t.filter(({ tag }) => tag === this.props.match.params.channel)\r\n\t\t.map((channel) => channel)[0];\r\n\r\n\tpublic state = {\r\n\t\tresults: [],\r\n\t\ttotalResults: 0,\r\n\t\toffset: 25,\r\n\t\ttotalPages: 1,\r\n\t\tcurrentPage: 1,\r\n\t\tisLoading: true,\r\n\t\ttitle: this.channel.title,\r\n\t\tdescription: this.channel.description\r\n\t};\r\n\r\n\tpublic async componentDidMount() {\r\n\t\tthis.getChannelAssets();\r\n\t}\r\n\r\n\tprivate getChannelAssets = async () => {\r\n\t\tconst { ocean } = this.context;\r\n\t\tconst { offset, currentPage } = this.state;\r\n\r\n\t\tconst searchQuery = {\r\n\t\t\toffset,\r\n\t\t\tpage: currentPage,\r\n\t\t\tquery: {\r\n\t\t\t\ttags: [ this.channel.tag ]\r\n\t\t\t},\r\n\t\t\tsort: {\r\n\t\t\t\tcreated: -1\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst search = await ocean.assets.query(searchQuery);\r\n\t\t\tthis.setState({\r\n\t\t\t\tresults: search.results,\r\n\t\t\t\ttotalResults: search.totalResults,\r\n\t\t\t\ttotalPages: search.totalPages,\r\n\t\t\t\tisLoading: false\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tLogger.error(error.message);\r\n\t\t\tthis.setState({ isLoading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tprivate handlePageClick = async (data: { selected: number }) => {\r\n\t\t// react-pagination starts counting at 0, we start at 1\r\n\t\tconst toPage = data.selected + 1;\r\n\r\n\t\tthis.props.history.push({ search: `?page=${toPage}` });\r\n\r\n\t\tawait this.setState({ currentPage: toPage, isLoading: true });\r\n\t\tawait this.getChannelAssets();\r\n\t};\r\n\r\n\tpublic renderResults = () =>\r\n\t\tthis.state.isLoading ? (\r\n\t\t\t<Spinner message=\"Searching...\" />\r\n\t\t) : this.state.results && this.state.results.length ? (\r\n\t\t\t<div className={styles.results}>\r\n\t\t\t\t{this.state.results.map((asset: any) => <AssetTeaser key={asset.id} asset={asset} />)}\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div>No research apps found.</div>\r\n\t\t);\r\n\r\n\tpublic render() {\r\n\t\tconst { title, description, totalPages, currentPage } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Route title={title} description={description} image={<CategoryImage header category={title} />}>\r\n\t\t\t\t<Content wide>\r\n\t\t\t\t\t{this.renderResults()}\r\n\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\thandlePageClick={this.handlePageClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Content>\r\n\t\t\t</Route>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nChannel.contextType = User;\r\n"]},"metadata":{},"sourceType":"module"}