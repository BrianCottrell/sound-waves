{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Projects\\\\ResearchHub\\\\research-hub\\\\client\\\\src\\\\components\\\\templates\\\\Asset\\\\AssetDetails.tsx\";\nimport React from 'react';\nimport Moment from 'react-moment';\nimport shortid from 'shortid';\nimport Markdown from '../../atoms/Markdown';\nimport CategoryLink from '../../atoms/CategoryLink';\nimport styles from './AssetDetails.module.scss';\nimport AssetFilesDetails from './AssetFilesDetails';\nimport Report from './Report';\nimport Web3 from 'web3';\nexport function datafilesLine(files) {\n  if (files.length === 1) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, files.length, \" data file\");\n  }\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, files.length, \" data files\");\n}\n\nvar MetaFixedItem = function MetaFixedItem(_ref) {\n  var name = _ref.name,\n      value = _ref.value;\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: styles.metaLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, name)), React.createElement(\"span\", {\n    className: styles.metaValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, value));\n};\n\nexport default function AssetDetails(_ref2) {\n  var metadata = _ref2.metadata,\n      ddo = _ref2.ddo;\n  var main = metadata.main,\n      additionalInformation = metadata.additionalInformation;\n  var price = main.price && Web3.utils.fromWei(main.price.toString());\n  var metaFixed = [{\n    name: 'Author',\n    value: main.author,\n    show: true\n  }, {\n    name: 'License',\n    value: main.license,\n    show: true\n  }, {\n    name: 'DID',\n    value: ddo.id,\n    show: true\n  }, {\n    name: 'Price',\n    value: \"\".concat(price, \" OCEAN\"),\n    show: price !== '0'\n  }];\n  return React.createElement(React.Fragment, null, React.createElement(\"aside\", {\n    className: styles.metaPrimary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, additionalInformation && additionalInformation.copyrightHolder && React.createElement(\"h2\", {\n    className: styles.copyrightHolder,\n    title: \"Copyright Holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, additionalInformation.copyrightHolder), React.createElement(\"div\", {\n    className: styles.metaPrimaryData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Date created, published on \".concat(main.datePublished),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    date: main.dateCreated,\n    format: \"L\",\n    interval: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), additionalInformation && additionalInformation.categories && React.createElement(CategoryLink, {\n    category: additionalInformation.categories[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), main.files && datafilesLine(main.files))), additionalInformation && additionalInformation.description && React.createElement(Markdown, {\n    text: additionalInformation.description,\n    className: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Report, {\n    did: ddo.id,\n    title: main.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.metaFixed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.metaFixedTitle,\n    title: \"This metadata can not be changed because it is used to generate the checksums for the DDO, and to encrypt the file urls.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Fixed Metadata\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, metaFixed.filter(function (item) {\n    return item.show;\n  }).map(function (item) {\n    return React.createElement(MetaFixedItem, {\n      key: shortid.generate(),\n      name: item.name,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n  }))), React.createElement(AssetFilesDetails, {\n    files: main.files ? main.files : [],\n    ddo: ddo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Brian/Projects/ResearchHub/research-hub/client/src/components/templates/Asset/AssetDetails.tsx"],"names":["React","Moment","shortid","Markdown","CategoryLink","styles","AssetFilesDetails","Report","Web3","datafilesLine","files","length","MetaFixedItem","name","value","metaLabel","metaValue","AssetDetails","metadata","ddo","main","additionalInformation","price","utils","fromWei","toString","metaFixed","author","show","license","id","metaPrimary","copyrightHolder","metaPrimaryData","datePublished","dateCreated","categories","description","metaFixedTitle","filter","item","map","generate"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport { DDO, MetaData, File } from '@oceanprotocol/squid'\r\nimport shortid from 'shortid'\r\nimport Markdown from '../../atoms/Markdown'\r\nimport CategoryLink from '../../atoms/CategoryLink'\r\nimport styles from './AssetDetails.module.scss'\r\nimport AssetFilesDetails from './AssetFilesDetails'\r\nimport Report from './Report'\r\nimport Web3 from 'web3'\r\n\r\ninterface AssetDetailsProps {\r\n    metadata: MetaData\r\n    ddo: DDO\r\n}\r\n\r\nexport function datafilesLine(files: File[]) {\r\n    if (files.length === 1) {\r\n        return <span>{files.length} data file</span>\r\n    }\r\n    return <span>{files.length} data files</span>\r\n}\r\n\r\nconst MetaFixedItem = ({ name, value }: { name: string; value: string }) => (\r\n    <li>\r\n        <span className={styles.metaLabel}>\r\n            <strong>{name}</strong>\r\n        </span>\r\n        <span className={styles.metaValue}>{value}</span>\r\n    </li>\r\n)\r\n\r\nexport default function AssetDetails({ metadata, ddo }: AssetDetailsProps) {\r\n    const { main, additionalInformation } = metadata\r\n    const price = main.price && Web3.utils.fromWei(main.price.toString())\r\n\r\n    const metaFixed = [\r\n        {\r\n            name: 'Author',\r\n            value: main.author,\r\n            show: true\r\n        },\r\n        {\r\n            name: 'License',\r\n            value: main.license,\r\n            show: true\r\n        },\r\n        {\r\n            name: 'DID',\r\n            value: ddo.id,\r\n            show: true\r\n        },\r\n        {\r\n            name: 'Price',\r\n            value: `${price} OCEAN`,\r\n            show: price !== '0'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <aside className={styles.metaPrimary}>\r\n                {additionalInformation &&\r\n                    additionalInformation.copyrightHolder && (\r\n                        <h2\r\n                            className={styles.copyrightHolder}\r\n                            title=\"Copyright Holder\"\r\n                        >\r\n                            {additionalInformation.copyrightHolder}\r\n                        </h2>\r\n                    )}\r\n                <div className={styles.metaPrimaryData}>\r\n                    <span\r\n                        title={`Date created, published on ${main.datePublished}`}\r\n                    >\r\n                        <Moment\r\n                            date={main.dateCreated}\r\n                            format=\"L\"\r\n                            interval={0}\r\n                        />\r\n                    </span>\r\n\r\n                    {additionalInformation &&\r\n                        additionalInformation.categories && (\r\n                            <CategoryLink\r\n                                category={additionalInformation.categories[0]}\r\n                            />\r\n                        )}\r\n\r\n                    {main.files && datafilesLine(main.files)}\r\n                </div>\r\n            </aside>\r\n\r\n            {additionalInformation && additionalInformation.description && (\r\n                <Markdown\r\n                    text={additionalInformation.description}\r\n                    className={styles.description}\r\n                />\r\n            )}\r\n\r\n            <Report did={ddo.id} title={main.name} />\r\n\r\n            <div className={styles.metaFixed}>\r\n                <h2\r\n                    className={styles.metaFixedTitle}\r\n                    title=\"This metadata can not be changed because it is used to generate the checksums for the DDO, and to encrypt the file urls.\"\r\n                >\r\n                    Fixed Metadata\r\n                </h2>\r\n                <ul>\r\n                    {metaFixed\r\n                        .filter(item => item.show)\r\n                        .map(item => (\r\n                            <MetaFixedItem\r\n                                key={shortid.generate()}\r\n                                name={item.name}\r\n                                value={item.value}\r\n                            />\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <AssetFilesDetails files={main.files ? main.files : []} ddo={ddo} />\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}